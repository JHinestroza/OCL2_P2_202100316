
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMENORMAYORleftMENORIGMAYORIGleftMENORIGMAYORIGIGUALDADleftMASMENOSrightUMENOSleftPORDIVIDIDOMODAND BOOL BOOLEANO BREAK CADENA CASE COMA CONSOLE CONST CONTINUE CORDER CORIZQ DECIMAL DEFAULT DIF DIVIDIDO DOSPUNTOS ELSE ENTERO FLOAT FOR FUNC ID IF IGUAL IGUALDAD INDEXOF INTERFACE JOIN LCASE LENGHT LLAVEDER LLAVEIZQ LOG MAS MAYOR MAYORIG MENOR MENORIG MENOS MOD NOT NUMBER OR PARDER PARIZQ PARSEFLOAT PARSEINT POP POR PUNTO PUNTOCOMA PUSH RETURN STRING SWITCH TERN TOSTRING TYPEOF UPCASE VAR WHILE false trues : blockblock : block instruccion\n            | instruccion instruccion : print\n                | ifinstruction \n                | whileinstruction \n                | declaration\n                | arraydeclaration\n                | forinstruction\n                | assignment\n                | breakstmt\n                | continuestmt\n                | functionstmt\n                | call\n                | returnstmt\n                | interfacecreation\n                | switch_statement\n                | interdeclarationprint : CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMAifinstruction : IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER\n                     | IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction\n                     | IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDERswitch_statement : SWITCH PARIZQ expression PARDER LLAVEIZQ cases_statement default_case LLAVEDER   \n                        | SWITCH PARIZQ expression PARDER LLAVEIZQ cases_statement LLAVEDERcases_statement : cases_statement case_statement\n                       | case_statementcase_statement : CASE expression DOSPUNTOS block default_case : DEFAULT DOSPUNTOS blockwhileinstruction : WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDERoperadores : ID MAS MAS  forinstruction : FOR PARIZQ declaration expression PUNTOCOMA operadores PARDER LLAVEIZQ block LLAVEDER  declaration : VAR ID DOSPUNTOS type IGUAL expression PUNTOCOMAdeclaration : VAR ID IGUAL expression PUNTOCOMAdeclaration : CONST ID DOSPUNTOS type IGUAL expression PUNTOCOMAarraydeclaration : VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expression PUNTOCOMAinterdeclaration : VAR ID DOSPUNTOS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMAinterfaceContent : interfaceContent COMA ID DOSPUNTOS expression\n                | ID DOSPUNTOS expressionassignment : ID IGUAL expression PUNTOCOMAreturnstmt : RETURN expression PUNTOCOMA\n                | RETURN PUNTOCOMAcall : ID PARIZQ expressionList PARDER PUNTOCOMA\n            | ID PARIZQ PARDER PUNTOCOMAfunctionstmt : FUNC ID funcparams functype LLAVEIZQ block LLAVEDERfuncparams : PARIZQ paramsList PARDER\n                |  PARIZQ PARDERinterfacecreation : INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMAattributeList : attributeList ID DOSPUNTOS type PUNTOCOMA\n                | ID DOSPUNTOS type PUNTOCOMAparamsList : paramsList COMA ID DOSPUNTOS type\n                | ID DOSPUNTOS typefunctype : DOSPUNTOS type\n                | breakstmt : BREAK PUNTOCOMAcontinuestmt : CONTINUE PUNTOCOMAtype : NUMBER\n            | FLOAT\n            | STRING\n            | BOOLexpressionList : expressionList COMA expression\n                    | expression expression : expression MAS expression\n                  | expression MENOS expression\n                  | expression POR expression\n                  | expression DIVIDIDO expression\n                  | expression MOD expression     expression : MENOS expression %prec UMENOSexpression : expression MENOR expression\n                  | expression MAYOR expression\n                  | expression MENORIG expression\n                  | expression MAYORIG expressionexpression : expression IGUALDAD expressionexpression : expression DIF expressionexpression : expression AND expressionexpression : expression OR expressionexpression : NOT expressionexpression : PARIZQ expression PARDERexpression :    PARSEINT PARIZQ expression PARDER \n                    | PARSEFLOAT PARIZQ expression PARDER expression :    expression PUNTO TOSTRING PARIZQ PARDER expression :    ID PUNTO TOSTRING PARIZQ PARDER expression : TYPEOF expression expression : expression TERN expression DOSPUNTOS expressionexpression    : ENTERO\n                    | CADENA\n                    | DECIMAL\n                    | BOOLEANO\n                    | listArrayexpression : CORIZQ expressionList CORDERexpression : ID PARIZQ expressionList PARDER\n            | ID PARIZQ PARDERlistArray : ID CORIZQ expression CORDER\n                | ID'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,41,42,45,75,113,116,152,153,157,158,163,180,181,189,197,201,202,203,206,208,211,216,225,229,230,231,232,233,235,237,238,239,240,241,243,244,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-54,-55,-41,-40,-39,-43,19,19,-33,-42,19,19,19,19,-47,-19,-22,-29,-32,-34,-44,-24,19,-23,19,19,19,-21,-36,-35,19,19,19,19,-31,-20,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,41,42,45,75,113,116,152,153,157,158,163,180,181,189,197,201,202,203,206,208,211,216,220,225,229,230,231,232,233,235,237,238,239,240,241,243,244,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-54,-55,-41,-40,-39,-43,20,20,-33,-42,20,20,20,20,-47,-19,-22,-29,-32,-34,-44,-24,20,20,-23,20,20,20,-21,-36,-35,20,20,20,20,-31,-20,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,41,42,45,75,113,116,152,153,157,158,163,180,181,189,197,201,202,203,206,208,211,216,225,229,230,231,232,233,235,237,238,239,240,241,243,244,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-54,-55,-41,-40,-39,-43,21,21,-33,-42,21,21,21,21,-47,-19,-22,-29,-32,-34,-44,-24,21,-23,21,21,21,-21,-36,-35,21,21,21,21,-31,-20,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,40,41,42,45,75,113,116,152,153,157,158,163,180,181,189,197,201,202,203,206,208,211,216,225,229,230,231,232,233,235,237,238,239,240,241,243,244,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,72,-54,-55,-41,-40,-39,-43,22,22,-33,-42,22,22,22,22,-47,-19,-22,-29,-32,-34,-44,-24,22,-23,22,22,22,-21,-36,-35,22,22,22,22,-31,-20,]),'CONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,40,41,42,45,75,113,116,152,153,157,158,163,180,181,189,197,201,202,203,206,208,211,216,225,229,230,231,232,233,235,237,238,239,240,241,243,244,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,24,-54,-55,-41,-40,-39,-43,24,24,-33,-42,24,24,24,24,-47,-19,-22,-29,-32,-34,-44,-24,24,-23,24,24,24,-21,-36,-35,24,24,24,24,-31,-20,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,41,42,45,75,113,116,152,153,157,158,163,180,181,189,197,201,202,203,206,208,211,216,225,229,230,231,232,233,235,237,238,239,240,241,243,244,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-54,-55,-41,-40,-39,-43,25,25,-33,-42,25,25,25,25,-47,-19,-22,-29,-32,-34,-44,-24,25,-23,25,25,25,-21,-36,-35,25,25,25,25,-31,-20,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,24,28,29,30,32,34,35,37,38,41,42,45,46,47,48,52,58,60,64,65,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,95,97,98,101,103,113,115,116,149,152,153,155,157,158,160,161,163,166,169,180,181,182,189,197,200,201,202,203,206,207,208,211,213,216,221,223,225,228,229,230,231,232,233,235,237,238,239,240,241,242,243,244,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,36,39,43,51,59,-2,51,51,51,51,-54,-55,-41,51,51,51,51,51,51,106,51,51,119,124,-40,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,148,51,-39,51,-43,176,23,23,51,-33,-42,51,187,23,190,51,23,23,204,23,-47,51,-19,-22,-29,-32,51,-34,-44,-49,-24,51,236,23,-48,-23,23,23,23,-21,-36,-35,23,23,23,23,51,-31,-20,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,41,42,45,75,113,116,152,153,157,158,163,180,181,189,197,201,202,203,206,208,211,216,225,229,230,231,232,233,235,237,238,239,240,241,243,244,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-54,-55,-41,-40,-39,-43,26,26,-33,-42,26,26,26,26,-47,-19,-22,-29,-32,-34,-44,-24,26,-23,26,26,26,-21,-36,-35,26,26,26,26,-31,-20,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,41,42,45,75,113,116,152,153,157,158,163,180,181,189,197,201,202,203,206,208,211,216,225,229,230,231,232,233,235,237,238,239,240,241,243,244,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-54,-55,-41,-40,-39,-43,27,27,-33,-42,27,27,27,27,-47,-19,-22,-29,-32,-34,-44,-24,27,-23,27,27,27,-21,-36,-35,27,27,27,27,-31,-20,]),'FUNC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,41,42,45,75,113,116,152,153,157,158,163,180,181,189,197,201,202,203,206,208,211,216,225,229,230,231,232,233,235,237,238,239,240,241,243,244,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-54,-55,-41,-40,-39,-43,28,28,-33,-42,28,28,28,28,-47,-19,-22,-29,-32,-34,-44,-24,28,-23,28,28,28,-21,-36,-35,28,28,28,28,-31,-20,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,41,42,45,75,113,116,152,153,157,158,163,180,181,189,197,201,202,203,206,208,211,216,225,229,230,231,232,233,235,237,238,239,240,241,243,244,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-54,-55,-41,-40,-39,-43,29,29,-33,-42,29,29,29,29,-47,-19,-22,-29,-32,-34,-44,-24,29,-23,29,29,29,-21,-36,-35,29,29,29,29,-31,-20,]),'INTERFACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,41,42,45,75,113,116,152,153,157,158,163,180,181,189,197,201,202,203,206,208,211,216,225,229,230,231,232,233,235,237,238,239,240,241,243,244,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-54,-55,-41,-40,-39,-43,30,30,-33,-42,30,30,30,30,-47,-19,-22,-29,-32,-34,-44,-24,30,-23,30,30,30,-21,-36,-35,30,30,30,30,-31,-20,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,41,42,45,75,113,116,152,153,157,158,163,180,181,189,197,201,202,203,206,208,211,216,225,229,230,231,232,233,235,237,238,239,240,241,243,244,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-54,-55,-41,-40,-39,-43,31,31,-33,-42,31,31,31,31,-47,-19,-22,-29,-32,-34,-44,-24,31,-23,31,31,31,-21,-36,-35,31,31,31,31,-31,-20,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,41,42,45,75,113,116,157,158,197,201,202,203,206,208,211,216,229,233,235,237,243,244,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-54,-55,-41,-40,-39,-43,-33,-42,-47,-19,-22,-29,-32,-34,-44,-24,-23,-21,-36,-35,-31,-20,]),'LLAVEDER':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,41,42,45,51,53,54,55,56,57,75,91,92,99,113,116,125,126,127,128,129,130,131,132,133,134,135,136,137,140,145,147,149,157,158,170,171,173,174,180,181,189,192,193,194,197,198,199,201,202,203,205,206,208,211,213,215,216,217,228,229,233,234,235,237,238,239,240,241,243,244,245,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-54,-55,-41,-93,-84,-85,-86,-87,-88,-40,-67,-76,-82,-39,-43,-62,-63,-64,-65,-66,-68,-69,-70,-71,-72,-73,-74,-75,-77,-91,-89,177,-33,-42,-78,-79,-90,-92,202,203,211,-80,-83,-81,-47,216,-26,-19,-22,-29,222,-32,-34,-44,-49,229,-24,-25,-48,-23,-21,-38,-36,-35,243,-28,-27,244,-31,-20,-37,]),'DEFAULT':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,41,42,45,75,113,116,157,158,197,198,199,201,202,203,206,208,211,216,217,229,233,235,237,240,243,244,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-54,-55,-41,-40,-39,-43,-33,-42,-47,218,-26,-19,-22,-29,-32,-34,-44,-24,-25,-23,-21,-36,-35,-27,-31,-20,]),'CASE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,32,41,42,45,75,113,116,157,158,178,197,198,199,201,202,203,206,208,211,216,217,229,233,235,237,240,243,244,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-54,-55,-41,-40,-39,-43,-33,-42,200,-47,200,-26,-19,-22,-29,-32,-34,-44,-24,-25,-23,-21,-36,-35,-27,-31,-20,]),'PUNTO':([19,44,51,53,54,55,56,57,62,63,66,69,91,92,93,99,102,112,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,159,170,171,173,174,183,185,192,193,194,219,224,234,245,],[33,89,96,-84,-85,-86,-87,-88,89,89,89,89,-67,89,89,89,89,89,89,-62,-63,-64,-65,-66,-68,-69,-70,-71,-72,89,89,89,89,-77,89,89,-91,89,-89,89,-78,-79,-90,-92,89,89,-80,89,-81,89,89,89,89,]),'PARIZQ':([20,21,23,25,29,31,34,35,37,38,43,46,47,48,49,50,51,52,58,60,61,65,71,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,95,97,98,103,115,138,143,155,157,160,169,200,206,207,208,221,242,],[34,35,38,40,48,60,48,48,48,48,74,48,48,48,94,95,97,48,48,48,103,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,168,172,48,-33,48,48,48,-32,48,-34,48,48,]),'IGUAL':([23,36,106,107,108,109,110,111,117,119,184,188,],[37,65,154,155,-56,-57,-58,-59,160,65,207,155,]),'PUNTOCOMA':([26,27,29,44,51,53,54,55,56,57,66,68,91,92,99,108,109,110,111,112,114,118,125,126,127,128,129,130,131,132,133,134,135,136,137,140,145,147,170,171,173,174,177,179,183,185,192,193,194,195,214,222,224,],[41,42,45,75,-93,-84,-85,-86,-87,-88,113,116,-67,-76,-82,-56,-57,-58,-59,157,158,161,-62,-63,-64,-65,-66,-68,-69,-70,-71,-72,-73,-74,-75,-77,-91,-89,-78,-79,-90,-92,197,201,206,208,-80,-83,-81,213,228,235,237,]),'MENOS':([29,34,35,37,38,44,46,47,48,51,52,53,54,55,56,57,58,60,62,63,65,66,69,71,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,97,98,99,102,103,112,115,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,155,157,159,160,169,170,171,173,174,183,185,192,193,194,200,206,207,208,219,221,224,234,242,245,],[46,46,46,46,46,77,46,46,46,-93,46,-84,-85,-86,-87,-88,46,46,77,77,46,77,77,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-67,77,77,46,46,46,46,77,77,46,77,46,77,-62,-63,-64,-65,-66,77,77,77,77,77,77,77,77,77,-77,77,77,-91,77,-89,46,-33,77,46,46,-78,-79,-90,-92,77,77,-80,77,-81,46,-32,46,-34,77,46,77,77,46,77,]),'NOT':([29,34,35,37,38,46,47,48,52,58,60,65,71,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,95,97,98,103,115,155,157,160,169,200,206,207,208,221,242,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-33,47,47,47,-32,47,-34,47,47,]),'PARSEINT':([29,34,35,37,38,46,47,48,52,58,60,65,71,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,95,97,98,103,115,155,157,160,169,200,206,207,208,221,242,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-33,49,49,49,-32,49,-34,49,49,]),'PARSEFLOAT':([29,34,35,37,38,46,47,48,52,58,60,65,71,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,95,97,98,103,115,155,157,160,169,200,206,207,208,221,242,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-33,50,50,50,-32,50,-34,50,50,]),'TYPEOF':([29,34,35,37,38,46,47,48,52,58,60,65,71,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,95,97,98,103,115,155,157,160,169,200,206,207,208,221,242,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-33,52,52,52,-32,52,-34,52,52,]),'ENTERO':([29,34,35,37,38,46,47,48,52,58,60,65,71,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,95,97,98,103,115,155,157,160,169,200,206,207,208,221,242,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-33,53,53,53,-32,53,-34,53,53,]),'CADENA':([29,34,35,37,38,46,47,48,52,58,60,65,71,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,95,97,98,103,115,155,157,160,169,200,206,207,208,221,242,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-33,54,54,54,-32,54,-34,54,54,]),'DECIMAL':([29,34,35,37,38,46,47,48,52,58,60,65,71,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,95,97,98,103,115,155,157,160,169,200,206,207,208,221,242,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-33,55,55,55,-32,55,-34,55,55,]),'BOOLEANO':([29,34,35,37,38,46,47,48,52,58,60,65,71,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,95,97,98,103,115,155,157,160,169,200,206,207,208,221,242,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-33,56,56,56,-32,56,-34,56,56,]),'CORIZQ':([29,34,35,37,38,46,47,48,51,52,58,60,65,71,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,95,97,98,103,107,108,109,110,111,115,155,157,160,169,200,206,207,208,221,242,],[58,58,58,58,58,58,58,58,98,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,156,-56,-57,-58,-59,58,58,-33,58,58,58,-32,58,-34,58,58,]),'LOG':([33,],[61,]),'DOSPUNTOS':([36,39,51,53,54,55,56,57,73,91,92,99,119,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,145,147,148,165,170,171,173,174,176,190,192,193,194,204,218,219,236,],[64,70,-93,-84,-85,-86,-87,-88,121,-67,-76,-82,162,-46,167,-62,-63,-64,-65,-66,-68,-69,-70,-71,-72,-73,-74,-75,169,-77,-91,-89,175,-45,-78,-79,-90,-92,196,212,-80,-83,-81,221,230,231,242,]),'PARDER':([38,51,53,54,55,56,57,62,63,67,69,74,91,92,93,97,99,102,108,109,110,111,122,125,126,127,128,129,130,131,132,133,134,135,136,137,140,141,142,144,145,147,151,159,168,170,171,172,173,174,186,191,192,193,194,226,227,],[68,-93,-84,-85,-86,-87,-88,104,105,114,-61,123,-67,-76,140,145,-82,150,-56,-57,-58,-59,165,-62,-63,-64,-65,-66,-68,-69,-70,-71,-72,-73,-74,-75,-77,170,171,173,-91,-89,179,-60,192,-78,-79,194,-90,-92,209,-51,-80,-83,-81,-30,-50,]),'MAS':([44,51,53,54,55,56,57,62,63,66,69,91,92,93,99,102,112,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,159,170,171,173,174,183,185,187,192,193,194,210,219,224,234,245,],[76,-93,-84,-85,-86,-87,-88,76,76,76,76,-67,76,76,76,76,76,76,-62,-63,-64,-65,-66,76,76,76,76,76,76,76,76,76,-77,76,76,-91,76,-89,76,-78,-79,-90,-92,76,76,210,-80,76,-81,226,76,76,76,76,]),'POR':([44,51,53,54,55,56,57,62,63,66,69,91,92,93,99,102,112,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,159,170,171,173,174,183,185,192,193,194,219,224,234,245,],[78,-93,-84,-85,-86,-87,-88,78,78,78,78,78,78,78,78,78,78,78,78,78,-64,-65,-66,78,78,78,78,78,78,78,78,78,-77,78,78,-91,78,-89,78,-78,-79,-90,-92,78,78,-80,78,-81,78,78,78,78,]),'DIVIDIDO':([44,51,53,54,55,56,57,62,63,66,69,91,92,93,99,102,112,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,159,170,171,173,174,183,185,192,193,194,219,224,234,245,],[79,-93,-84,-85,-86,-87,-88,79,79,79,79,79,79,79,79,79,79,79,79,79,-64,-65,-66,79,79,79,79,79,79,79,79,79,-77,79,79,-91,79,-89,79,-78,-79,-90,-92,79,79,-80,79,-81,79,79,79,79,]),'MOD':([44,51,53,54,55,56,57,62,63,66,69,91,92,93,99,102,112,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,159,170,171,173,174,183,185,192,193,194,219,224,234,245,],[80,-93,-84,-85,-86,-87,-88,80,80,80,80,80,80,80,80,80,80,80,80,80,-64,-65,-66,80,80,80,80,80,80,80,80,80,-77,80,80,-91,80,-89,80,-78,-79,-90,-92,80,80,-80,80,-81,80,80,80,80,]),'MENOR':([44,51,53,54,55,56,57,62,63,66,69,91,92,93,99,102,112,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,159,170,171,173,174,183,185,192,193,194,219,224,234,245,],[81,-93,-84,-85,-86,-87,-88,81,81,81,81,-67,81,81,81,81,81,81,-62,-63,-64,-65,-66,-68,-69,-70,-71,-72,81,81,81,81,-77,81,81,-91,81,-89,81,-78,-79,-90,-92,81,81,-80,81,-81,81,81,81,81,]),'MAYOR':([44,51,53,54,55,56,57,62,63,66,69,91,92,93,99,102,112,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,159,170,171,173,174,183,185,192,193,194,219,224,234,245,],[82,-93,-84,-85,-86,-87,-88,82,82,82,82,-67,82,82,82,82,82,82,-62,-63,-64,-65,-66,-68,-69,-70,-71,-72,82,82,82,82,-77,82,82,-91,82,-89,82,-78,-79,-90,-92,82,82,-80,82,-81,82,82,82,82,]),'MENORIG':([44,51,53,54,55,56,57,62,63,66,69,91,92,93,99,102,112,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,159,170,171,173,174,183,185,192,193,194,219,224,234,245,],[83,-93,-84,-85,-86,-87,-88,83,83,83,83,-67,83,83,83,83,83,83,-62,-63,-64,-65,-66,83,83,-70,-71,-72,83,83,83,83,-77,83,83,-91,83,-89,83,-78,-79,-90,-92,83,83,-80,83,-81,83,83,83,83,]),'MAYORIG':([44,51,53,54,55,56,57,62,63,66,69,91,92,93,99,102,112,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,159,170,171,173,174,183,185,192,193,194,219,224,234,245,],[84,-93,-84,-85,-86,-87,-88,84,84,84,84,-67,84,84,84,84,84,84,-62,-63,-64,-65,-66,84,84,-70,-71,-72,84,84,84,84,-77,84,84,-91,84,-89,84,-78,-79,-90,-92,84,84,-80,84,-81,84,84,84,84,]),'IGUALDAD':([44,51,53,54,55,56,57,62,63,66,69,91,92,93,99,102,112,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,159,170,171,173,174,183,185,192,193,194,219,224,234,245,],[85,-93,-84,-85,-86,-87,-88,85,85,85,85,-67,85,85,85,85,85,85,-62,-63,-64,-65,-66,85,85,85,85,-72,85,85,85,85,-77,85,85,-91,85,-89,85,-78,-79,-90,-92,85,85,-80,85,-81,85,85,85,85,]),'DIF':([44,51,53,54,55,56,57,62,63,66,69,91,92,93,99,102,112,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,159,170,171,173,174,183,185,192,193,194,219,224,234,245,],[86,-93,-84,-85,-86,-87,-88,86,86,86,86,-67,86,86,86,86,86,86,-62,-63,-64,-65,-66,-68,-69,-70,-71,-72,86,86,86,86,-77,86,86,-91,86,-89,86,-78,-79,-90,-92,86,86,-80,86,-81,86,86,86,86,]),'AND':([44,51,53,54,55,56,57,62,63,66,69,91,92,93,99,102,112,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,159,170,171,173,174,183,185,192,193,194,219,224,234,245,],[87,-93,-84,-85,-86,-87,-88,87,87,87,87,-67,87,87,87,87,87,87,-62,-63,-64,-65,-66,-68,-69,-70,-71,-72,87,87,87,87,-77,87,87,-91,87,-89,87,-78,-79,-90,-92,87,87,-80,87,-81,87,87,87,87,]),'OR':([44,51,53,54,55,56,57,62,63,66,69,91,92,93,99,102,112,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,159,170,171,173,174,183,185,192,193,194,219,224,234,245,],[88,-93,-84,-85,-86,-87,-88,88,88,88,88,-67,88,88,88,88,88,88,-62,-63,-64,-65,-66,-68,-69,-70,-71,-72,88,88,88,88,-77,88,88,-91,88,-89,88,-78,-79,-90,-92,88,88,-80,88,-81,88,88,88,88,]),'TERN':([44,51,53,54,55,56,57,62,63,66,69,91,92,93,99,102,112,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,159,170,171,173,174,183,185,192,193,194,219,224,234,245,],[90,-93,-84,-85,-86,-87,-88,90,90,90,90,-67,90,90,90,90,90,90,-62,-63,-64,-65,-66,-68,-69,-70,-71,-72,90,90,90,90,-77,90,90,-91,90,-89,90,-78,-79,-90,-92,90,90,-80,90,-81,90,90,90,90,]),'COMA':([51,53,54,55,56,57,67,69,91,92,99,100,108,109,110,111,122,125,126,127,128,129,130,131,132,133,134,135,136,137,140,144,145,147,151,159,170,171,173,174,191,192,193,194,205,227,234,245,],[-93,-84,-85,-86,-87,-88,115,-61,-67,-76,-82,115,-56,-57,-58,-59,166,-62,-63,-64,-65,-66,-68,-69,-70,-71,-72,-73,-74,-75,-77,115,-91,-89,115,-60,-78,-79,-90,-92,-51,-80,-83,-81,223,-50,-38,-37,]),'CORDER':([51,53,54,55,56,57,69,91,92,99,100,125,126,127,128,129,130,131,132,133,134,135,136,137,140,145,146,147,156,159,170,171,173,174,192,193,194,],[-93,-84,-85,-86,-87,-88,-61,-67,-76,-82,147,-62,-63,-64,-65,-66,-68,-69,-70,-71,-72,-73,-74,-75,-77,-91,174,-89,184,-60,-78,-79,-90,-92,-80,-83,-81,]),'LLAVEIZQ':([59,73,104,105,108,109,110,111,120,123,150,154,164,165,209,220,],[101,-53,152,153,-56,-57,-58,-59,163,-46,178,182,-52,-45,225,232,]),'NUMBER':([64,70,121,162,167,175,196,212,],[108,108,108,108,108,108,108,108,]),'FLOAT':([64,70,121,162,167,175,196,212,],[109,109,109,109,109,109,109,109,]),'STRING':([64,70,121,162,167,175,196,212,],[110,110,110,110,110,110,110,110,]),'BOOL':([64,70,121,162,167,175,196,212,],[111,111,111,111,111,111,111,111,]),'TOSTRING':([89,96,],[138,143,]),'ELSE':([202,],[220,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'s':([0,],[1,]),'block':([0,152,153,163,225,230,231,232,],[2,180,181,189,238,239,240,241,]),'instruccion':([0,2,152,153,163,180,181,189,225,230,231,232,238,239,240,241,],[3,32,3,3,3,32,32,32,3,3,3,3,32,32,32,32,]),'print':([0,2,152,153,163,180,181,189,225,230,231,232,238,239,240,241,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'ifinstruction':([0,2,152,153,163,180,181,189,220,225,230,231,232,238,239,240,241,],[5,5,5,5,5,5,5,5,233,5,5,5,5,5,5,5,5,]),'whileinstruction':([0,2,152,153,163,180,181,189,225,230,231,232,238,239,240,241,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'declaration':([0,2,40,152,153,163,180,181,189,225,230,231,232,238,239,240,241,],[7,7,71,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'arraydeclaration':([0,2,152,153,163,180,181,189,225,230,231,232,238,239,240,241,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'forinstruction':([0,2,152,153,163,180,181,189,225,230,231,232,238,239,240,241,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'assignment':([0,2,152,153,163,180,181,189,225,230,231,232,238,239,240,241,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'breakstmt':([0,2,152,153,163,180,181,189,225,230,231,232,238,239,240,241,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'continuestmt':([0,2,152,153,163,180,181,189,225,230,231,232,238,239,240,241,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'functionstmt':([0,2,152,153,163,180,181,189,225,230,231,232,238,239,240,241,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'call':([0,2,152,153,163,180,181,189,225,230,231,232,238,239,240,241,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'returnstmt':([0,2,152,153,163,180,181,189,225,230,231,232,238,239,240,241,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'interfacecreation':([0,2,152,153,163,180,181,189,225,230,231,232,238,239,240,241,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'switch_statement':([0,2,152,153,163,180,181,189,225,230,231,232,238,239,240,241,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'interdeclaration':([0,2,152,153,163,180,181,189,225,230,231,232,238,239,240,241,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'expression':([29,34,35,37,38,46,47,48,52,58,60,65,71,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,95,97,98,103,115,155,160,169,200,207,221,242,],[44,62,63,66,69,91,92,93,99,69,102,112,118,125,126,127,128,129,130,131,132,133,134,135,136,137,139,141,142,69,146,69,159,183,185,193,219,224,234,245,]),'listArray':([29,34,35,37,38,46,47,48,52,58,60,65,71,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,95,97,98,103,115,155,160,169,200,207,221,242,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'expressionList':([38,58,97,103,],[67,100,144,151,]),'funcparams':([43,],[73,]),'type':([64,70,121,162,167,175,196,212,],[107,117,164,188,191,195,214,227,]),'functype':([73,],[120,]),'paramsList':([74,],[122,]),'attributeList':([101,],[149,]),'operadores':([161,],[186,]),'cases_statement':([178,],[198,]),'case_statement':([178,198,],[199,217,]),'interfaceContent':([182,],[205,]),'default_case':([198,],[215,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> s","S'",1,None,None,None),
  ('s -> block','s',1,'p_start','parser.py',254),
  ('block -> block instruccion','block',2,'p_instruction_block','parser.py',258),
  ('block -> instruccion','block',1,'p_instruction_block','parser.py',259),
  ('instruccion -> print','instruccion',1,'p_instruction_list','parser.py',268),
  ('instruccion -> ifinstruction','instruccion',1,'p_instruction_list','parser.py',269),
  ('instruccion -> whileinstruction','instruccion',1,'p_instruction_list','parser.py',270),
  ('instruccion -> declaration','instruccion',1,'p_instruction_list','parser.py',271),
  ('instruccion -> arraydeclaration','instruccion',1,'p_instruction_list','parser.py',272),
  ('instruccion -> forinstruction','instruccion',1,'p_instruction_list','parser.py',273),
  ('instruccion -> assignment','instruccion',1,'p_instruction_list','parser.py',274),
  ('instruccion -> breakstmt','instruccion',1,'p_instruction_list','parser.py',275),
  ('instruccion -> continuestmt','instruccion',1,'p_instruction_list','parser.py',276),
  ('instruccion -> functionstmt','instruccion',1,'p_instruction_list','parser.py',277),
  ('instruccion -> call','instruccion',1,'p_instruction_list','parser.py',278),
  ('instruccion -> returnstmt','instruccion',1,'p_instruction_list','parser.py',279),
  ('instruccion -> interfacecreation','instruccion',1,'p_instruction_list','parser.py',280),
  ('instruccion -> switch_statement','instruccion',1,'p_instruction_list','parser.py',281),
  ('instruccion -> interdeclaration','instruccion',1,'p_instruction_list','parser.py',282),
  ('print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA','print',7,'p_instruction_console','parser.py',286),
  ('ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER','ifinstruction',11,'p_instruction_if_else','parser.py',291),
  ('ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction','ifinstruction',9,'p_instruction_if_else','parser.py',292),
  ('ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER','ifinstruction',7,'p_instruction_if_else','parser.py',293),
  ('switch_statement -> SWITCH PARIZQ expression PARDER LLAVEIZQ cases_statement default_case LLAVEDER','switch_statement',8,'p_switch_statement','parser.py',304),
  ('switch_statement -> SWITCH PARIZQ expression PARDER LLAVEIZQ cases_statement LLAVEDER','switch_statement',7,'p_switch_statement','parser.py',305),
  ('cases_statement -> cases_statement case_statement','cases_statement',2,'p_cases_statement','parser.py',314),
  ('cases_statement -> case_statement','cases_statement',1,'p_cases_statement','parser.py',315),
  ('case_statement -> CASE expression DOSPUNTOS block','case_statement',4,'p_case_statement','parser.py',323),
  ('default_case -> DEFAULT DOSPUNTOS block','default_case',3,'p_default_statement','parser.py',328),
  ('whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER','whileinstruction',7,'p_instruction_while','parser.py',335),
  ('operadores -> ID MAS MAS','operadores',3,'p_instruction_operadores','parser.py',340),
  ('forinstruction -> FOR PARIZQ declaration expression PUNTOCOMA operadores PARDER LLAVEIZQ block LLAVEDER','forinstruction',10,'p_instruction_FOR','parser.py',345),
  ('declaration -> VAR ID DOSPUNTOS type IGUAL expression PUNTOCOMA','declaration',7,'p_instruction_declaration','parser.py',352),
  ('declaration -> VAR ID IGUAL expression PUNTOCOMA','declaration',5,'p_instruction_assignment_decla','parser.py',362),
  ('declaration -> CONST ID DOSPUNTOS type IGUAL expression PUNTOCOMA','declaration',7,'p_instruction_declaration2','parser.py',368),
  ('arraydeclaration -> VAR ID DOSPUNTOS type CORIZQ CORDER IGUAL expression PUNTOCOMA','arraydeclaration',9,'p_instruction_array_declaration','parser.py',374),
  ('interdeclaration -> VAR ID DOSPUNTOS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA','interdeclaration',9,'p_instruction_interface_declaration','parser.py',379),
  ('interfaceContent -> interfaceContent COMA ID DOSPUNTOS expression','interfaceContent',5,'p_instruction_interface_content','parser.py',384),
  ('interfaceContent -> ID DOSPUNTOS expression','interfaceContent',3,'p_instruction_interface_content','parser.py',385),
  ('assignment -> ID IGUAL expression PUNTOCOMA','assignment',4,'p_instruction_assignment','parser.py',396),
  ('returnstmt -> RETURN expression PUNTOCOMA','returnstmt',3,'p_instruction_return','parser.py',401),
  ('returnstmt -> RETURN PUNTOCOMA','returnstmt',2,'p_instruction_return','parser.py',402),
  ('call -> ID PARIZQ expressionList PARDER PUNTOCOMA','call',5,'p_instruction_call_function','parser.py',410),
  ('call -> ID PARIZQ PARDER PUNTOCOMA','call',4,'p_instruction_call_function','parser.py',411),
  ('functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER','functionstmt',7,'p_instruction_function','parser.py',419),
  ('funcparams -> PARIZQ paramsList PARDER','funcparams',3,'p_instruction_function_params_list','parser.py',424),
  ('funcparams -> PARIZQ PARDER','funcparams',2,'p_instruction_function_params_list','parser.py',425),
  ('interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA','interfacecreation',6,'p_instruction_interface_creation','parser.py',432),
  ('attributeList -> attributeList ID DOSPUNTOS type PUNTOCOMA','attributeList',5,'p_instruction_interface_attribute','parser.py',437),
  ('attributeList -> ID DOSPUNTOS type PUNTOCOMA','attributeList',4,'p_instruction_interface_attribute','parser.py',438),
  ('paramsList -> paramsList COMA ID DOSPUNTOS type','paramsList',5,'p_expression_param_list','parser.py',449),
  ('paramsList -> ID DOSPUNTOS type','paramsList',3,'p_expression_param_list','parser.py',450),
  ('functype -> DOSPUNTOS type','functype',2,'p_instruction_function_type','parser.py',461),
  ('functype -> <empty>','functype',0,'p_instruction_function_type','parser.py',462),
  ('breakstmt -> BREAK PUNTOCOMA','breakstmt',2,'p_instruction_break','parser.py',469),
  ('continuestmt -> CONTINUE PUNTOCOMA','continuestmt',2,'p_instruction_continue','parser.py',474),
  ('type -> NUMBER','type',1,'p_type_prod','parser.py',479),
  ('type -> FLOAT','type',1,'p_type_prod','parser.py',480),
  ('type -> STRING','type',1,'p_type_prod','parser.py',481),
  ('type -> BOOL','type',1,'p_type_prod','parser.py',482),
  ('expressionList -> expressionList COMA expression','expressionList',3,'p_expression_list','parser.py',494),
  ('expressionList -> expression','expressionList',1,'p_expression_list','parser.py',495),
  ('expression -> expression MAS expression','expression',3,'p_expression_binaria','parser.py',505),
  ('expression -> expression MENOS expression','expression',3,'p_expression_binaria','parser.py',506),
  ('expression -> expression POR expression','expression',3,'p_expression_binaria','parser.py',507),
  ('expression -> expression DIVIDIDO expression','expression',3,'p_expression_binaria','parser.py',508),
  ('expression -> expression MOD expression','expression',3,'p_expression_binaria','parser.py',509),
  ('expression -> MENOS expression','expression',2,'p_expresion_unaria','parser.py',518),
  ('expression -> expression MENOR expression','expression',3,'p_expression_Relacionales','parser.py',524),
  ('expression -> expression MAYOR expression','expression',3,'p_expression_Relacionales','parser.py',525),
  ('expression -> expression MENORIG expression','expression',3,'p_expression_Relacionales','parser.py',526),
  ('expression -> expression MAYORIG expression','expression',3,'p_expression_Relacionales','parser.py',527),
  ('expression -> expression IGUALDAD expression','expression',3,'p_expression_igual','parser.py',535),
  ('expression -> expression DIF expression','expression',3,'p_expression_diferente','parser.py',540),
  ('expression -> expression AND expression','expression',3,'p_expression_and','parser.py',545),
  ('expression -> expression OR expression','expression',3,'p_expression_or','parser.py',550),
  ('expression -> NOT expression','expression',2,'p_expression_not','parser.py',555),
  ('expression -> PARIZQ expression PARDER','expression',3,'p_expression_agrupacion','parser.py',560),
  ('expression -> PARSEINT PARIZQ expression PARDER','expression',4,'p_instruction_embebidas','parser.py',565),
  ('expression -> PARSEFLOAT PARIZQ expression PARDER','expression',4,'p_instruction_embebidas','parser.py',566),
  ('expression -> expression PUNTO TOSTRING PARIZQ PARDER','expression',5,'p_instruction_embebidas_string','parser.py',573),
  ('expression -> ID PUNTO TOSTRING PARIZQ PARDER','expression',5,'p_instruction_embebidas_string2','parser.py',578),
  ('expression -> TYPEOF expression','expression',2,'p_instruction_embebidas_typeof','parser.py',586),
  ('expression -> expression TERN expression DOSPUNTOS expression','expression',5,'p_expression_ternario','parser.py',591),
  ('expression -> ENTERO','expression',1,'p_expression_primitiva','parser.py',596),
  ('expression -> CADENA','expression',1,'p_expression_primitiva','parser.py',597),
  ('expression -> DECIMAL','expression',1,'p_expression_primitiva','parser.py',598),
  ('expression -> BOOLEANO','expression',1,'p_expression_primitiva','parser.py',599),
  ('expression -> listArray','expression',1,'p_expression_primitiva','parser.py',600),
  ('expression -> CORIZQ expressionList CORDER','expression',3,'p_expression_array_primitiva','parser.py',604),
  ('expression -> ID PARIZQ expressionList PARDER','expression',4,'p_expression_call_function','parser.py',609),
  ('expression -> ID PARIZQ PARDER','expression',3,'p_expression_call_function','parser.py',610),
  ('listArray -> ID CORIZQ expression CORDER','listArray',4,'p_expression_list_array','parser.py',618),
  ('listArray -> ID','listArray',1,'p_expression_list_array','parser.py',619),
]
