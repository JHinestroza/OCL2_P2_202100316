Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CASE
    DEFAULT
    INDEXOF
    JOIN
    LCASE
    LENGHT
    POP
    PUSH
    SWITCH
    TOSTRING
    TYPEOF
    UPCASE

Grammar

Rule 0     S' -> s
Rule 1     s -> block
Rule 2     block -> block instruccion
Rule 3     block -> instruccion
Rule 4     instruccion -> print
Rule 5     instruccion -> ifinstruction
Rule 6     instruccion -> whileinstruction
Rule 7     instruccion -> declaration
Rule 8     instruccion -> arraydeclaration
Rule 9     instruccion -> assignment
Rule 10    instruccion -> breakstmt
Rule 11    instruccion -> continuestmt
Rule 12    instruccion -> functionstmt
Rule 13    instruccion -> call
Rule 14    instruccion -> returnstmt
Rule 15    instruccion -> interfacecreation
Rule 16    instruccion -> interdeclaration
Rule 17    print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA
Rule 18    ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
Rule 19    ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction
Rule 20    ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 21    whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 22    declaration -> VAR ID DOSPTS type IGUAL expression PUNTOCOMA
Rule 23    arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA
Rule 24    interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA
Rule 25    interfaceContent -> interfaceContent COMA ID DOSPTS expression
Rule 26    interfaceContent -> ID DOSPTS expression
Rule 27    assignment -> ID IGUAL expression PUNTOCOMA
Rule 28    returnstmt -> RETURN expression PUNTOCOMA
Rule 29    returnstmt -> RETURN PUNTOCOMA
Rule 30    call -> ID PARIZQ expressionList PARDER PUNTOCOMA
Rule 31    call -> ID PARIZQ PARDER PUNTOCOMA
Rule 32    functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
Rule 33    funcparams -> PARIZQ paramsList PARDER
Rule 34    funcparams -> PARIZQ PARDER
Rule 35    interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA
Rule 36    attributeList -> attributeList ID DOSPTS type PUNTOCOMA
Rule 37    attributeList -> ID DOSPTS type PUNTOCOMA
Rule 38    paramsList -> paramsList COMA ID DOSPTS type
Rule 39    paramsList -> ID DOSPTS type
Rule 40    functype -> DOSPTS type
Rule 41    functype -> <empty>
Rule 42    breakstmt -> BREAK PUNTOCOMA
Rule 43    continuestmt -> CONTINUE PUNTOCOMA
Rule 44    type -> NUMBER
Rule 45    type -> FLOAT
Rule 46    type -> STRING
Rule 47    type -> BOOL
Rule 48    expressionList -> expressionList COMA expression
Rule 49    expressionList -> expression
Rule 50    expression -> expression MAS expression
Rule 51    expression -> expression MENOS expression
Rule 52    expression -> expression POR expression
Rule 53    expression -> expression DIVIDIDO expression
Rule 54    expression -> expression MOD expression
Rule 55    expression -> MENOS expression
Rule 56    expression -> expression MENOR expression
Rule 57    expression -> expression MAYOR expression
Rule 58    expression -> expression MENORIG expression
Rule 59    expression -> expression MAYORIG expression
Rule 60    expression -> expression IGUALDAD expression
Rule 61    expression -> expression DIF expression
Rule 62    expression -> expression AND expression
Rule 63    expression -> expression OR expression
Rule 64    expression -> NOT expression
Rule 65    expression -> PARIZQ expression PARDER
Rule 66    expression -> PARSEINT PARIZQ expression PARDER
Rule 67    expression -> PARSEFLOAT PARIZQ expression PARDER
Rule 68    expression -> expression TERN expression DOSPTS expression
Rule 69    expression -> ENTERO
Rule 70    expression -> CADENA
Rule 71    expression -> DECIMAL
Rule 72    expression -> listArray
Rule 73    expression -> CORIZQ expressionList CORDER
Rule 74    expression -> ID PARIZQ expressionList PARDER
Rule 75    expression -> ID PARIZQ PARDER
Rule 76    listArray -> ID CORIZQ expression CORDER
Rule 77    listArray -> ID

Terminals, with rules where they appear

AND                  : 62
BOOL                 : 47
BREAK                : 42
CADENA               : 70
CASE                 : 
COMA                 : 25 38 48
CONSOLE              : 17
CONTINUE             : 43
CORDER               : 23 73 76
CORIZQ               : 23 73 76
DECIMAL              : 71
DEFAULT              : 
DIF                  : 61
DIVIDIDO             : 53
DOSPTS               : 22 23 24 25 26 36 37 38 39 40 68
ELSE                 : 18 19
ENTERO               : 69
FLOAT                : 45
FUNC                 : 32
ID                   : 22 23 24 24 25 26 27 30 31 32 35 36 37 38 39 74 75 76 77
IF                   : 18 19 20
IGUAL                : 22 23 24 27
IGUALDAD             : 60
INDEXOF              : 
INTERFACE            : 35
JOIN                 : 
LCASE                : 
LENGHT               : 
LLAVEDER             : 18 18 19 20 21 24 32 35
LLAVEIZQ             : 18 18 19 20 21 24 32 35
LOG                  : 17
MAS                  : 50
MAYOR                : 57
MAYORIG              : 59
MENOR                : 56
MENORIG              : 58
MENOS                : 51 55
MOD                  : 54
NOT                  : 64
NUMBER               : 44
OR                   : 63
PARDER               : 17 18 19 20 21 30 31 33 34 65 66 67 74 75
PARIZQ               : 17 18 19 20 21 30 31 33 34 65 66 67 74 75
PARSEFLOAT           : 67
PARSEINT             : 66
POP                  : 
POR                  : 52
PUNTO                : 17
PUNTOCOMA            : 17 22 23 24 27 28 29 30 31 35 36 37 42 43
PUSH                 : 
RETURN               : 28 29
STRING               : 46
SWITCH               : 
TERN                 : 68
TOSTRING             : 
TYPEOF               : 
UPCASE               : 
VAR                  : 22 23 24
WHILE                : 21
error                : 

Nonterminals, with rules where they appear

arraydeclaration     : 8
assignment           : 9
attributeList        : 35 36
block                : 1 2 18 18 19 20 21 32
breakstmt            : 10
call                 : 13
continuestmt         : 11
declaration          : 7
expression           : 18 19 20 21 22 23 25 26 27 28 48 49 50 50 51 51 52 52 53 53 54 54 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 65 66 67 68 68 68 76
expressionList       : 17 30 48 73 74
funcparams           : 32
functionstmt         : 12
functype             : 32
ifinstruction        : 5 19
instruccion          : 2 3
interdeclaration     : 16
interfaceContent     : 24 25
interfacecreation    : 15
listArray            : 72
paramsList           : 33 38
print                : 4
returnstmt           : 14
s                    : 0
type                 : 22 23 36 37 38 39 40
whileinstruction     : 6

Parsing method: LALR

state 0

    (0) S' -> . s
    (1) s -> . block
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (21) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (22) declaration -> . VAR ID DOSPTS type IGUAL expression PUNTOCOMA
    (23) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA
    (27) assignment -> . ID IGUAL expression PUNTOCOMA
    (42) breakstmt -> . BREAK PUNTOCOMA
    (43) continuestmt -> . CONTINUE PUNTOCOMA
    (32) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (30) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (31) call -> . ID PARIZQ PARDER PUNTOCOMA
    (28) returnstmt -> . RETURN expression PUNTOCOMA
    (29) returnstmt -> . RETURN PUNTOCOMA
    (35) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA
    (24) interdeclaration -> . VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA

    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    s                              shift and go to state 1
    block                          shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 1

    (0) S' -> s .



state 2

    (1) s -> block .
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (21) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (22) declaration -> . VAR ID DOSPTS type IGUAL expression PUNTOCOMA
    (23) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA
    (27) assignment -> . ID IGUAL expression PUNTOCOMA
    (42) breakstmt -> . BREAK PUNTOCOMA
    (43) continuestmt -> . CONTINUE PUNTOCOMA
    (32) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (30) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (31) call -> . ID PARIZQ PARDER PUNTOCOMA
    (28) returnstmt -> . RETURN expression PUNTOCOMA
    (29) returnstmt -> . RETURN PUNTOCOMA
    (35) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA
    (24) interdeclaration -> . VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA

    $end            reduce using rule 1 (s -> block .)
    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    instruccion                    shift and go to state 27
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 3

    (3) block -> instruccion .

    CONSOLE         reduce using rule 3 (block -> instruccion .)
    IF              reduce using rule 3 (block -> instruccion .)
    WHILE           reduce using rule 3 (block -> instruccion .)
    VAR             reduce using rule 3 (block -> instruccion .)
    ID              reduce using rule 3 (block -> instruccion .)
    BREAK           reduce using rule 3 (block -> instruccion .)
    CONTINUE        reduce using rule 3 (block -> instruccion .)
    FUNC            reduce using rule 3 (block -> instruccion .)
    RETURN          reduce using rule 3 (block -> instruccion .)
    INTERFACE       reduce using rule 3 (block -> instruccion .)
    $end            reduce using rule 3 (block -> instruccion .)
    LLAVEDER        reduce using rule 3 (block -> instruccion .)


state 4

    (4) instruccion -> print .

    CONSOLE         reduce using rule 4 (instruccion -> print .)
    IF              reduce using rule 4 (instruccion -> print .)
    WHILE           reduce using rule 4 (instruccion -> print .)
    VAR             reduce using rule 4 (instruccion -> print .)
    ID              reduce using rule 4 (instruccion -> print .)
    BREAK           reduce using rule 4 (instruccion -> print .)
    CONTINUE        reduce using rule 4 (instruccion -> print .)
    FUNC            reduce using rule 4 (instruccion -> print .)
    RETURN          reduce using rule 4 (instruccion -> print .)
    INTERFACE       reduce using rule 4 (instruccion -> print .)
    $end            reduce using rule 4 (instruccion -> print .)
    LLAVEDER        reduce using rule 4 (instruccion -> print .)


state 5

    (5) instruccion -> ifinstruction .

    CONSOLE         reduce using rule 5 (instruccion -> ifinstruction .)
    IF              reduce using rule 5 (instruccion -> ifinstruction .)
    WHILE           reduce using rule 5 (instruccion -> ifinstruction .)
    VAR             reduce using rule 5 (instruccion -> ifinstruction .)
    ID              reduce using rule 5 (instruccion -> ifinstruction .)
    BREAK           reduce using rule 5 (instruccion -> ifinstruction .)
    CONTINUE        reduce using rule 5 (instruccion -> ifinstruction .)
    FUNC            reduce using rule 5 (instruccion -> ifinstruction .)
    RETURN          reduce using rule 5 (instruccion -> ifinstruction .)
    INTERFACE       reduce using rule 5 (instruccion -> ifinstruction .)
    $end            reduce using rule 5 (instruccion -> ifinstruction .)
    LLAVEDER        reduce using rule 5 (instruccion -> ifinstruction .)


state 6

    (6) instruccion -> whileinstruction .

    CONSOLE         reduce using rule 6 (instruccion -> whileinstruction .)
    IF              reduce using rule 6 (instruccion -> whileinstruction .)
    WHILE           reduce using rule 6 (instruccion -> whileinstruction .)
    VAR             reduce using rule 6 (instruccion -> whileinstruction .)
    ID              reduce using rule 6 (instruccion -> whileinstruction .)
    BREAK           reduce using rule 6 (instruccion -> whileinstruction .)
    CONTINUE        reduce using rule 6 (instruccion -> whileinstruction .)
    FUNC            reduce using rule 6 (instruccion -> whileinstruction .)
    RETURN          reduce using rule 6 (instruccion -> whileinstruction .)
    INTERFACE       reduce using rule 6 (instruccion -> whileinstruction .)
    $end            reduce using rule 6 (instruccion -> whileinstruction .)
    LLAVEDER        reduce using rule 6 (instruccion -> whileinstruction .)


state 7

    (7) instruccion -> declaration .

    CONSOLE         reduce using rule 7 (instruccion -> declaration .)
    IF              reduce using rule 7 (instruccion -> declaration .)
    WHILE           reduce using rule 7 (instruccion -> declaration .)
    VAR             reduce using rule 7 (instruccion -> declaration .)
    ID              reduce using rule 7 (instruccion -> declaration .)
    BREAK           reduce using rule 7 (instruccion -> declaration .)
    CONTINUE        reduce using rule 7 (instruccion -> declaration .)
    FUNC            reduce using rule 7 (instruccion -> declaration .)
    RETURN          reduce using rule 7 (instruccion -> declaration .)
    INTERFACE       reduce using rule 7 (instruccion -> declaration .)
    $end            reduce using rule 7 (instruccion -> declaration .)
    LLAVEDER        reduce using rule 7 (instruccion -> declaration .)


state 8

    (8) instruccion -> arraydeclaration .

    CONSOLE         reduce using rule 8 (instruccion -> arraydeclaration .)
    IF              reduce using rule 8 (instruccion -> arraydeclaration .)
    WHILE           reduce using rule 8 (instruccion -> arraydeclaration .)
    VAR             reduce using rule 8 (instruccion -> arraydeclaration .)
    ID              reduce using rule 8 (instruccion -> arraydeclaration .)
    BREAK           reduce using rule 8 (instruccion -> arraydeclaration .)
    CONTINUE        reduce using rule 8 (instruccion -> arraydeclaration .)
    FUNC            reduce using rule 8 (instruccion -> arraydeclaration .)
    RETURN          reduce using rule 8 (instruccion -> arraydeclaration .)
    INTERFACE       reduce using rule 8 (instruccion -> arraydeclaration .)
    $end            reduce using rule 8 (instruccion -> arraydeclaration .)
    LLAVEDER        reduce using rule 8 (instruccion -> arraydeclaration .)


state 9

    (9) instruccion -> assignment .

    CONSOLE         reduce using rule 9 (instruccion -> assignment .)
    IF              reduce using rule 9 (instruccion -> assignment .)
    WHILE           reduce using rule 9 (instruccion -> assignment .)
    VAR             reduce using rule 9 (instruccion -> assignment .)
    ID              reduce using rule 9 (instruccion -> assignment .)
    BREAK           reduce using rule 9 (instruccion -> assignment .)
    CONTINUE        reduce using rule 9 (instruccion -> assignment .)
    FUNC            reduce using rule 9 (instruccion -> assignment .)
    RETURN          reduce using rule 9 (instruccion -> assignment .)
    INTERFACE       reduce using rule 9 (instruccion -> assignment .)
    $end            reduce using rule 9 (instruccion -> assignment .)
    LLAVEDER        reduce using rule 9 (instruccion -> assignment .)


state 10

    (10) instruccion -> breakstmt .

    CONSOLE         reduce using rule 10 (instruccion -> breakstmt .)
    IF              reduce using rule 10 (instruccion -> breakstmt .)
    WHILE           reduce using rule 10 (instruccion -> breakstmt .)
    VAR             reduce using rule 10 (instruccion -> breakstmt .)
    ID              reduce using rule 10 (instruccion -> breakstmt .)
    BREAK           reduce using rule 10 (instruccion -> breakstmt .)
    CONTINUE        reduce using rule 10 (instruccion -> breakstmt .)
    FUNC            reduce using rule 10 (instruccion -> breakstmt .)
    RETURN          reduce using rule 10 (instruccion -> breakstmt .)
    INTERFACE       reduce using rule 10 (instruccion -> breakstmt .)
    $end            reduce using rule 10 (instruccion -> breakstmt .)
    LLAVEDER        reduce using rule 10 (instruccion -> breakstmt .)


state 11

    (11) instruccion -> continuestmt .

    CONSOLE         reduce using rule 11 (instruccion -> continuestmt .)
    IF              reduce using rule 11 (instruccion -> continuestmt .)
    WHILE           reduce using rule 11 (instruccion -> continuestmt .)
    VAR             reduce using rule 11 (instruccion -> continuestmt .)
    ID              reduce using rule 11 (instruccion -> continuestmt .)
    BREAK           reduce using rule 11 (instruccion -> continuestmt .)
    CONTINUE        reduce using rule 11 (instruccion -> continuestmt .)
    FUNC            reduce using rule 11 (instruccion -> continuestmt .)
    RETURN          reduce using rule 11 (instruccion -> continuestmt .)
    INTERFACE       reduce using rule 11 (instruccion -> continuestmt .)
    $end            reduce using rule 11 (instruccion -> continuestmt .)
    LLAVEDER        reduce using rule 11 (instruccion -> continuestmt .)


state 12

    (12) instruccion -> functionstmt .

    CONSOLE         reduce using rule 12 (instruccion -> functionstmt .)
    IF              reduce using rule 12 (instruccion -> functionstmt .)
    WHILE           reduce using rule 12 (instruccion -> functionstmt .)
    VAR             reduce using rule 12 (instruccion -> functionstmt .)
    ID              reduce using rule 12 (instruccion -> functionstmt .)
    BREAK           reduce using rule 12 (instruccion -> functionstmt .)
    CONTINUE        reduce using rule 12 (instruccion -> functionstmt .)
    FUNC            reduce using rule 12 (instruccion -> functionstmt .)
    RETURN          reduce using rule 12 (instruccion -> functionstmt .)
    INTERFACE       reduce using rule 12 (instruccion -> functionstmt .)
    $end            reduce using rule 12 (instruccion -> functionstmt .)
    LLAVEDER        reduce using rule 12 (instruccion -> functionstmt .)


state 13

    (13) instruccion -> call .

    CONSOLE         reduce using rule 13 (instruccion -> call .)
    IF              reduce using rule 13 (instruccion -> call .)
    WHILE           reduce using rule 13 (instruccion -> call .)
    VAR             reduce using rule 13 (instruccion -> call .)
    ID              reduce using rule 13 (instruccion -> call .)
    BREAK           reduce using rule 13 (instruccion -> call .)
    CONTINUE        reduce using rule 13 (instruccion -> call .)
    FUNC            reduce using rule 13 (instruccion -> call .)
    RETURN          reduce using rule 13 (instruccion -> call .)
    INTERFACE       reduce using rule 13 (instruccion -> call .)
    $end            reduce using rule 13 (instruccion -> call .)
    LLAVEDER        reduce using rule 13 (instruccion -> call .)


state 14

    (14) instruccion -> returnstmt .

    CONSOLE         reduce using rule 14 (instruccion -> returnstmt .)
    IF              reduce using rule 14 (instruccion -> returnstmt .)
    WHILE           reduce using rule 14 (instruccion -> returnstmt .)
    VAR             reduce using rule 14 (instruccion -> returnstmt .)
    ID              reduce using rule 14 (instruccion -> returnstmt .)
    BREAK           reduce using rule 14 (instruccion -> returnstmt .)
    CONTINUE        reduce using rule 14 (instruccion -> returnstmt .)
    FUNC            reduce using rule 14 (instruccion -> returnstmt .)
    RETURN          reduce using rule 14 (instruccion -> returnstmt .)
    INTERFACE       reduce using rule 14 (instruccion -> returnstmt .)
    $end            reduce using rule 14 (instruccion -> returnstmt .)
    LLAVEDER        reduce using rule 14 (instruccion -> returnstmt .)


state 15

    (15) instruccion -> interfacecreation .

    CONSOLE         reduce using rule 15 (instruccion -> interfacecreation .)
    IF              reduce using rule 15 (instruccion -> interfacecreation .)
    WHILE           reduce using rule 15 (instruccion -> interfacecreation .)
    VAR             reduce using rule 15 (instruccion -> interfacecreation .)
    ID              reduce using rule 15 (instruccion -> interfacecreation .)
    BREAK           reduce using rule 15 (instruccion -> interfacecreation .)
    CONTINUE        reduce using rule 15 (instruccion -> interfacecreation .)
    FUNC            reduce using rule 15 (instruccion -> interfacecreation .)
    RETURN          reduce using rule 15 (instruccion -> interfacecreation .)
    INTERFACE       reduce using rule 15 (instruccion -> interfacecreation .)
    $end            reduce using rule 15 (instruccion -> interfacecreation .)
    LLAVEDER        reduce using rule 15 (instruccion -> interfacecreation .)


state 16

    (16) instruccion -> interdeclaration .

    CONSOLE         reduce using rule 16 (instruccion -> interdeclaration .)
    IF              reduce using rule 16 (instruccion -> interdeclaration .)
    WHILE           reduce using rule 16 (instruccion -> interdeclaration .)
    VAR             reduce using rule 16 (instruccion -> interdeclaration .)
    ID              reduce using rule 16 (instruccion -> interdeclaration .)
    BREAK           reduce using rule 16 (instruccion -> interdeclaration .)
    CONTINUE        reduce using rule 16 (instruccion -> interdeclaration .)
    FUNC            reduce using rule 16 (instruccion -> interdeclaration .)
    RETURN          reduce using rule 16 (instruccion -> interdeclaration .)
    INTERFACE       reduce using rule 16 (instruccion -> interdeclaration .)
    $end            reduce using rule 16 (instruccion -> interdeclaration .)
    LLAVEDER        reduce using rule 16 (instruccion -> interdeclaration .)


state 17

    (17) print -> CONSOLE . PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA

    PUNTO           shift and go to state 28


state 18

    (18) ifinstruction -> IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 29


state 19

    (21) whileinstruction -> WHILE . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 30


state 20

    (22) declaration -> VAR . ID DOSPTS type IGUAL expression PUNTOCOMA
    (23) arraydeclaration -> VAR . ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA
    (24) interdeclaration -> VAR . ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA

    ID              shift and go to state 31


state 21

    (27) assignment -> ID . IGUAL expression PUNTOCOMA
    (30) call -> ID . PARIZQ expressionList PARDER PUNTOCOMA
    (31) call -> ID . PARIZQ PARDER PUNTOCOMA

    IGUAL           shift and go to state 32
    PARIZQ          shift and go to state 33


state 22

    (42) breakstmt -> BREAK . PUNTOCOMA

    PUNTOCOMA       shift and go to state 34


state 23

    (43) continuestmt -> CONTINUE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 35


state 24

    (32) functionstmt -> FUNC . ID funcparams functype LLAVEIZQ block LLAVEDER

    ID              shift and go to state 36


state 25

    (28) returnstmt -> RETURN . expression PUNTOCOMA
    (29) returnstmt -> RETURN . PUNTOCOMA
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    PUNTOCOMA       shift and go to state 38
    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 37
    listArray                      shift and go to state 47

state 26

    (35) interfacecreation -> INTERFACE . ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA

    ID              shift and go to state 50


state 27

    (2) block -> block instruccion .

    CONSOLE         reduce using rule 2 (block -> block instruccion .)
    IF              reduce using rule 2 (block -> block instruccion .)
    WHILE           reduce using rule 2 (block -> block instruccion .)
    VAR             reduce using rule 2 (block -> block instruccion .)
    ID              reduce using rule 2 (block -> block instruccion .)
    BREAK           reduce using rule 2 (block -> block instruccion .)
    CONTINUE        reduce using rule 2 (block -> block instruccion .)
    FUNC            reduce using rule 2 (block -> block instruccion .)
    RETURN          reduce using rule 2 (block -> block instruccion .)
    INTERFACE       reduce using rule 2 (block -> block instruccion .)
    $end            reduce using rule 2 (block -> block instruccion .)
    LLAVEDER        reduce using rule 2 (block -> block instruccion .)


state 28

    (17) print -> CONSOLE PUNTO . LOG PARIZQ expressionList PARDER PUNTOCOMA

    LOG             shift and go to state 51


state 29

    (18) ifinstruction -> IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 52
    listArray                      shift and go to state 47

state 30

    (21) whileinstruction -> WHILE PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 53
    listArray                      shift and go to state 47

state 31

    (22) declaration -> VAR ID . DOSPTS type IGUAL expression PUNTOCOMA
    (23) arraydeclaration -> VAR ID . DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA
    (24) interdeclaration -> VAR ID . DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA

    DOSPTS          shift and go to state 54


state 32

    (27) assignment -> ID IGUAL . expression PUNTOCOMA
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 55
    listArray                      shift and go to state 47

state 33

    (30) call -> ID PARIZQ . expressionList PARDER PUNTOCOMA
    (31) call -> ID PARIZQ . PARDER PUNTOCOMA
    (48) expressionList -> . expressionList COMA expression
    (49) expressionList -> . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    PARDER          shift and go to state 57
    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expressionList                 shift and go to state 56
    expression                     shift and go to state 58
    listArray                      shift and go to state 47

state 34

    (42) breakstmt -> BREAK PUNTOCOMA .

    CONSOLE         reduce using rule 42 (breakstmt -> BREAK PUNTOCOMA .)
    IF              reduce using rule 42 (breakstmt -> BREAK PUNTOCOMA .)
    WHILE           reduce using rule 42 (breakstmt -> BREAK PUNTOCOMA .)
    VAR             reduce using rule 42 (breakstmt -> BREAK PUNTOCOMA .)
    ID              reduce using rule 42 (breakstmt -> BREAK PUNTOCOMA .)
    BREAK           reduce using rule 42 (breakstmt -> BREAK PUNTOCOMA .)
    CONTINUE        reduce using rule 42 (breakstmt -> BREAK PUNTOCOMA .)
    FUNC            reduce using rule 42 (breakstmt -> BREAK PUNTOCOMA .)
    RETURN          reduce using rule 42 (breakstmt -> BREAK PUNTOCOMA .)
    INTERFACE       reduce using rule 42 (breakstmt -> BREAK PUNTOCOMA .)
    $end            reduce using rule 42 (breakstmt -> BREAK PUNTOCOMA .)
    LLAVEDER        reduce using rule 42 (breakstmt -> BREAK PUNTOCOMA .)


state 35

    (43) continuestmt -> CONTINUE PUNTOCOMA .

    CONSOLE         reduce using rule 43 (continuestmt -> CONTINUE PUNTOCOMA .)
    IF              reduce using rule 43 (continuestmt -> CONTINUE PUNTOCOMA .)
    WHILE           reduce using rule 43 (continuestmt -> CONTINUE PUNTOCOMA .)
    VAR             reduce using rule 43 (continuestmt -> CONTINUE PUNTOCOMA .)
    ID              reduce using rule 43 (continuestmt -> CONTINUE PUNTOCOMA .)
    BREAK           reduce using rule 43 (continuestmt -> CONTINUE PUNTOCOMA .)
    CONTINUE        reduce using rule 43 (continuestmt -> CONTINUE PUNTOCOMA .)
    FUNC            reduce using rule 43 (continuestmt -> CONTINUE PUNTOCOMA .)
    RETURN          reduce using rule 43 (continuestmt -> CONTINUE PUNTOCOMA .)
    INTERFACE       reduce using rule 43 (continuestmt -> CONTINUE PUNTOCOMA .)
    $end            reduce using rule 43 (continuestmt -> CONTINUE PUNTOCOMA .)
    LLAVEDER        reduce using rule 43 (continuestmt -> CONTINUE PUNTOCOMA .)


state 36

    (32) functionstmt -> FUNC ID . funcparams functype LLAVEIZQ block LLAVEDER
    (33) funcparams -> . PARIZQ paramsList PARDER
    (34) funcparams -> . PARIZQ PARDER

    PARIZQ          shift and go to state 60

    funcparams                     shift and go to state 59

state 37

    (28) returnstmt -> RETURN expression . PUNTOCOMA
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PUNTOCOMA       shift and go to state 61
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75


state 38

    (29) returnstmt -> RETURN PUNTOCOMA .

    CONSOLE         reduce using rule 29 (returnstmt -> RETURN PUNTOCOMA .)
    IF              reduce using rule 29 (returnstmt -> RETURN PUNTOCOMA .)
    WHILE           reduce using rule 29 (returnstmt -> RETURN PUNTOCOMA .)
    VAR             reduce using rule 29 (returnstmt -> RETURN PUNTOCOMA .)
    ID              reduce using rule 29 (returnstmt -> RETURN PUNTOCOMA .)
    BREAK           reduce using rule 29 (returnstmt -> RETURN PUNTOCOMA .)
    CONTINUE        reduce using rule 29 (returnstmt -> RETURN PUNTOCOMA .)
    FUNC            reduce using rule 29 (returnstmt -> RETURN PUNTOCOMA .)
    RETURN          reduce using rule 29 (returnstmt -> RETURN PUNTOCOMA .)
    INTERFACE       reduce using rule 29 (returnstmt -> RETURN PUNTOCOMA .)
    $end            reduce using rule 29 (returnstmt -> RETURN PUNTOCOMA .)
    LLAVEDER        reduce using rule 29 (returnstmt -> RETURN PUNTOCOMA .)


state 39

    (55) expression -> MENOS . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 76
    listArray                      shift and go to state 47

state 40

    (64) expression -> NOT . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 77
    listArray                      shift and go to state 47

state 41

    (65) expression -> PARIZQ . expression PARDER
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 78
    listArray                      shift and go to state 47

state 42

    (66) expression -> PARSEINT . PARIZQ expression PARDER

    PARIZQ          shift and go to state 79


state 43

    (67) expression -> PARSEFLOAT . PARIZQ expression PARDER

    PARIZQ          shift and go to state 80


state 44

    (69) expression -> ENTERO .

    PUNTOCOMA       reduce using rule 69 (expression -> ENTERO .)
    MAS             reduce using rule 69 (expression -> ENTERO .)
    MENOS           reduce using rule 69 (expression -> ENTERO .)
    POR             reduce using rule 69 (expression -> ENTERO .)
    DIVIDIDO        reduce using rule 69 (expression -> ENTERO .)
    MOD             reduce using rule 69 (expression -> ENTERO .)
    MENOR           reduce using rule 69 (expression -> ENTERO .)
    MAYOR           reduce using rule 69 (expression -> ENTERO .)
    MENORIG         reduce using rule 69 (expression -> ENTERO .)
    MAYORIG         reduce using rule 69 (expression -> ENTERO .)
    IGUALDAD        reduce using rule 69 (expression -> ENTERO .)
    DIF             reduce using rule 69 (expression -> ENTERO .)
    AND             reduce using rule 69 (expression -> ENTERO .)
    OR              reduce using rule 69 (expression -> ENTERO .)
    TERN            reduce using rule 69 (expression -> ENTERO .)
    PARDER          reduce using rule 69 (expression -> ENTERO .)
    COMA            reduce using rule 69 (expression -> ENTERO .)
    CORDER          reduce using rule 69 (expression -> ENTERO .)
    DOSPTS          reduce using rule 69 (expression -> ENTERO .)
    LLAVEDER        reduce using rule 69 (expression -> ENTERO .)


state 45

    (70) expression -> CADENA .

    PUNTOCOMA       reduce using rule 70 (expression -> CADENA .)
    MAS             reduce using rule 70 (expression -> CADENA .)
    MENOS           reduce using rule 70 (expression -> CADENA .)
    POR             reduce using rule 70 (expression -> CADENA .)
    DIVIDIDO        reduce using rule 70 (expression -> CADENA .)
    MOD             reduce using rule 70 (expression -> CADENA .)
    MENOR           reduce using rule 70 (expression -> CADENA .)
    MAYOR           reduce using rule 70 (expression -> CADENA .)
    MENORIG         reduce using rule 70 (expression -> CADENA .)
    MAYORIG         reduce using rule 70 (expression -> CADENA .)
    IGUALDAD        reduce using rule 70 (expression -> CADENA .)
    DIF             reduce using rule 70 (expression -> CADENA .)
    AND             reduce using rule 70 (expression -> CADENA .)
    OR              reduce using rule 70 (expression -> CADENA .)
    TERN            reduce using rule 70 (expression -> CADENA .)
    PARDER          reduce using rule 70 (expression -> CADENA .)
    COMA            reduce using rule 70 (expression -> CADENA .)
    CORDER          reduce using rule 70 (expression -> CADENA .)
    DOSPTS          reduce using rule 70 (expression -> CADENA .)
    LLAVEDER        reduce using rule 70 (expression -> CADENA .)


state 46

    (71) expression -> DECIMAL .

    PUNTOCOMA       reduce using rule 71 (expression -> DECIMAL .)
    MAS             reduce using rule 71 (expression -> DECIMAL .)
    MENOS           reduce using rule 71 (expression -> DECIMAL .)
    POR             reduce using rule 71 (expression -> DECIMAL .)
    DIVIDIDO        reduce using rule 71 (expression -> DECIMAL .)
    MOD             reduce using rule 71 (expression -> DECIMAL .)
    MENOR           reduce using rule 71 (expression -> DECIMAL .)
    MAYOR           reduce using rule 71 (expression -> DECIMAL .)
    MENORIG         reduce using rule 71 (expression -> DECIMAL .)
    MAYORIG         reduce using rule 71 (expression -> DECIMAL .)
    IGUALDAD        reduce using rule 71 (expression -> DECIMAL .)
    DIF             reduce using rule 71 (expression -> DECIMAL .)
    AND             reduce using rule 71 (expression -> DECIMAL .)
    OR              reduce using rule 71 (expression -> DECIMAL .)
    TERN            reduce using rule 71 (expression -> DECIMAL .)
    PARDER          reduce using rule 71 (expression -> DECIMAL .)
    COMA            reduce using rule 71 (expression -> DECIMAL .)
    CORDER          reduce using rule 71 (expression -> DECIMAL .)
    DOSPTS          reduce using rule 71 (expression -> DECIMAL .)
    LLAVEDER        reduce using rule 71 (expression -> DECIMAL .)


state 47

    (72) expression -> listArray .

    PUNTOCOMA       reduce using rule 72 (expression -> listArray .)
    MAS             reduce using rule 72 (expression -> listArray .)
    MENOS           reduce using rule 72 (expression -> listArray .)
    POR             reduce using rule 72 (expression -> listArray .)
    DIVIDIDO        reduce using rule 72 (expression -> listArray .)
    MOD             reduce using rule 72 (expression -> listArray .)
    MENOR           reduce using rule 72 (expression -> listArray .)
    MAYOR           reduce using rule 72 (expression -> listArray .)
    MENORIG         reduce using rule 72 (expression -> listArray .)
    MAYORIG         reduce using rule 72 (expression -> listArray .)
    IGUALDAD        reduce using rule 72 (expression -> listArray .)
    DIF             reduce using rule 72 (expression -> listArray .)
    AND             reduce using rule 72 (expression -> listArray .)
    OR              reduce using rule 72 (expression -> listArray .)
    TERN            reduce using rule 72 (expression -> listArray .)
    PARDER          reduce using rule 72 (expression -> listArray .)
    COMA            reduce using rule 72 (expression -> listArray .)
    CORDER          reduce using rule 72 (expression -> listArray .)
    DOSPTS          reduce using rule 72 (expression -> listArray .)
    LLAVEDER        reduce using rule 72 (expression -> listArray .)


state 48

    (73) expression -> CORIZQ . expressionList CORDER
    (48) expressionList -> . expressionList COMA expression
    (49) expressionList -> . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expressionList                 shift and go to state 81
    expression                     shift and go to state 58
    listArray                      shift and go to state 47

state 49

    (74) expression -> ID . PARIZQ expressionList PARDER
    (75) expression -> ID . PARIZQ PARDER
    (76) listArray -> ID . CORIZQ expression CORDER
    (77) listArray -> ID .

    PARIZQ          shift and go to state 82
    CORIZQ          shift and go to state 83
    PUNTOCOMA       reduce using rule 77 (listArray -> ID .)
    MAS             reduce using rule 77 (listArray -> ID .)
    MENOS           reduce using rule 77 (listArray -> ID .)
    POR             reduce using rule 77 (listArray -> ID .)
    DIVIDIDO        reduce using rule 77 (listArray -> ID .)
    MOD             reduce using rule 77 (listArray -> ID .)
    MENOR           reduce using rule 77 (listArray -> ID .)
    MAYOR           reduce using rule 77 (listArray -> ID .)
    MENORIG         reduce using rule 77 (listArray -> ID .)
    MAYORIG         reduce using rule 77 (listArray -> ID .)
    IGUALDAD        reduce using rule 77 (listArray -> ID .)
    DIF             reduce using rule 77 (listArray -> ID .)
    AND             reduce using rule 77 (listArray -> ID .)
    OR              reduce using rule 77 (listArray -> ID .)
    TERN            reduce using rule 77 (listArray -> ID .)
    PARDER          reduce using rule 77 (listArray -> ID .)
    COMA            reduce using rule 77 (listArray -> ID .)
    CORDER          reduce using rule 77 (listArray -> ID .)
    DOSPTS          reduce using rule 77 (listArray -> ID .)
    LLAVEDER        reduce using rule 77 (listArray -> ID .)


state 50

    (35) interfacecreation -> INTERFACE ID . LLAVEIZQ attributeList LLAVEDER PUNTOCOMA

    LLAVEIZQ        shift and go to state 84


state 51

    (17) print -> CONSOLE PUNTO LOG . PARIZQ expressionList PARDER PUNTOCOMA

    PARIZQ          shift and go to state 85


state 52

    (18) ifinstruction -> IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 86
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75


state 53

    (21) whileinstruction -> WHILE PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 87
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75


state 54

    (22) declaration -> VAR ID DOSPTS . type IGUAL expression PUNTOCOMA
    (23) arraydeclaration -> VAR ID DOSPTS . type CORIZQ CORDER IGUAL expression PUNTOCOMA
    (24) interdeclaration -> VAR ID DOSPTS . ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA
    (44) type -> . NUMBER
    (45) type -> . FLOAT
    (46) type -> . STRING
    (47) type -> . BOOL

    ID              shift and go to state 88
    NUMBER          shift and go to state 90
    FLOAT           shift and go to state 91
    STRING          shift and go to state 92
    BOOL            shift and go to state 93

    type                           shift and go to state 89

state 55

    (27) assignment -> ID IGUAL expression . PUNTOCOMA
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PUNTOCOMA       shift and go to state 94
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75


state 56

    (30) call -> ID PARIZQ expressionList . PARDER PUNTOCOMA
    (48) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 95
    COMA            shift and go to state 96


state 57

    (31) call -> ID PARIZQ PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 97


state 58

    (49) expressionList -> expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 49 (expressionList -> expression .)
    COMA            reduce using rule 49 (expressionList -> expression .)
    CORDER          reduce using rule 49 (expressionList -> expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75


state 59

    (32) functionstmt -> FUNC ID funcparams . functype LLAVEIZQ block LLAVEDER
    (40) functype -> . DOSPTS type
    (41) functype -> .

    DOSPTS          shift and go to state 99
    LLAVEIZQ        reduce using rule 41 (functype -> .)

    functype                       shift and go to state 98

state 60

    (33) funcparams -> PARIZQ . paramsList PARDER
    (34) funcparams -> PARIZQ . PARDER
    (38) paramsList -> . paramsList COMA ID DOSPTS type
    (39) paramsList -> . ID DOSPTS type

    PARDER          shift and go to state 101
    ID              shift and go to state 102

    paramsList                     shift and go to state 100

state 61

    (28) returnstmt -> RETURN expression PUNTOCOMA .

    CONSOLE         reduce using rule 28 (returnstmt -> RETURN expression PUNTOCOMA .)
    IF              reduce using rule 28 (returnstmt -> RETURN expression PUNTOCOMA .)
    WHILE           reduce using rule 28 (returnstmt -> RETURN expression PUNTOCOMA .)
    VAR             reduce using rule 28 (returnstmt -> RETURN expression PUNTOCOMA .)
    ID              reduce using rule 28 (returnstmt -> RETURN expression PUNTOCOMA .)
    BREAK           reduce using rule 28 (returnstmt -> RETURN expression PUNTOCOMA .)
    CONTINUE        reduce using rule 28 (returnstmt -> RETURN expression PUNTOCOMA .)
    FUNC            reduce using rule 28 (returnstmt -> RETURN expression PUNTOCOMA .)
    RETURN          reduce using rule 28 (returnstmt -> RETURN expression PUNTOCOMA .)
    INTERFACE       reduce using rule 28 (returnstmt -> RETURN expression PUNTOCOMA .)
    $end            reduce using rule 28 (returnstmt -> RETURN expression PUNTOCOMA .)
    LLAVEDER        reduce using rule 28 (returnstmt -> RETURN expression PUNTOCOMA .)


state 62

    (50) expression -> expression MAS . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 103
    listArray                      shift and go to state 47

state 63

    (51) expression -> expression MENOS . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 104
    listArray                      shift and go to state 47

state 64

    (52) expression -> expression POR . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 105
    listArray                      shift and go to state 47

state 65

    (53) expression -> expression DIVIDIDO . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 106
    listArray                      shift and go to state 47

state 66

    (54) expression -> expression MOD . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 107
    listArray                      shift and go to state 47

state 67

    (56) expression -> expression MENOR . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 108
    listArray                      shift and go to state 47

state 68

    (57) expression -> expression MAYOR . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 109
    listArray                      shift and go to state 47

state 69

    (58) expression -> expression MENORIG . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 110
    listArray                      shift and go to state 47

state 70

    (59) expression -> expression MAYORIG . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 111
    listArray                      shift and go to state 47

state 71

    (60) expression -> expression IGUALDAD . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 112
    listArray                      shift and go to state 47

state 72

    (61) expression -> expression DIF . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 113
    listArray                      shift and go to state 47

state 73

    (62) expression -> expression AND . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 114
    listArray                      shift and go to state 47

state 74

    (63) expression -> expression OR . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 115
    listArray                      shift and go to state 47

state 75

    (68) expression -> expression TERN . expression DOSPTS expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 116
    listArray                      shift and go to state 47

state 76

    (55) expression -> MENOS expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PUNTOCOMA       reduce using rule 55 (expression -> MENOS expression .)
    MAS             reduce using rule 55 (expression -> MENOS expression .)
    MENOS           reduce using rule 55 (expression -> MENOS expression .)
    MOD             reduce using rule 55 (expression -> MENOS expression .)
    MENOR           reduce using rule 55 (expression -> MENOS expression .)
    MAYOR           reduce using rule 55 (expression -> MENOS expression .)
    MENORIG         reduce using rule 55 (expression -> MENOS expression .)
    MAYORIG         reduce using rule 55 (expression -> MENOS expression .)
    IGUALDAD        reduce using rule 55 (expression -> MENOS expression .)
    DIF             reduce using rule 55 (expression -> MENOS expression .)
    AND             reduce using rule 55 (expression -> MENOS expression .)
    OR              reduce using rule 55 (expression -> MENOS expression .)
    TERN            reduce using rule 55 (expression -> MENOS expression .)
    PARDER          reduce using rule 55 (expression -> MENOS expression .)
    COMA            reduce using rule 55 (expression -> MENOS expression .)
    CORDER          reduce using rule 55 (expression -> MENOS expression .)
    DOSPTS          reduce using rule 55 (expression -> MENOS expression .)
    LLAVEDER        reduce using rule 55 (expression -> MENOS expression .)
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65

  ! POR             [ reduce using rule 55 (expression -> MENOS expression .) ]
  ! DIVIDIDO        [ reduce using rule 55 (expression -> MENOS expression .) ]
  ! MAS             [ shift and go to state 62 ]
  ! MENOS           [ shift and go to state 63 ]
  ! MOD             [ shift and go to state 66 ]
  ! MENOR           [ shift and go to state 67 ]
  ! MAYOR           [ shift and go to state 68 ]
  ! MENORIG         [ shift and go to state 69 ]
  ! MAYORIG         [ shift and go to state 70 ]
  ! IGUALDAD        [ shift and go to state 71 ]
  ! DIF             [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! TERN            [ shift and go to state 75 ]


state 77

    (64) expression -> NOT expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PUNTOCOMA       reduce using rule 64 (expression -> NOT expression .)
    PARDER          reduce using rule 64 (expression -> NOT expression .)
    COMA            reduce using rule 64 (expression -> NOT expression .)
    CORDER          reduce using rule 64 (expression -> NOT expression .)
    DOSPTS          reduce using rule 64 (expression -> NOT expression .)
    LLAVEDER        reduce using rule 64 (expression -> NOT expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75

  ! MAS             [ reduce using rule 64 (expression -> NOT expression .) ]
  ! MENOS           [ reduce using rule 64 (expression -> NOT expression .) ]
  ! POR             [ reduce using rule 64 (expression -> NOT expression .) ]
  ! DIVIDIDO        [ reduce using rule 64 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 64 (expression -> NOT expression .) ]
  ! MENOR           [ reduce using rule 64 (expression -> NOT expression .) ]
  ! MAYOR           [ reduce using rule 64 (expression -> NOT expression .) ]
  ! MENORIG         [ reduce using rule 64 (expression -> NOT expression .) ]
  ! MAYORIG         [ reduce using rule 64 (expression -> NOT expression .) ]
  ! IGUALDAD        [ reduce using rule 64 (expression -> NOT expression .) ]
  ! DIF             [ reduce using rule 64 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 64 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 64 (expression -> NOT expression .) ]
  ! TERN            [ reduce using rule 64 (expression -> NOT expression .) ]


state 78

    (65) expression -> PARIZQ expression . PARDER
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 117
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75


state 79

    (66) expression -> PARSEINT PARIZQ . expression PARDER
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 118
    listArray                      shift and go to state 47

state 80

    (67) expression -> PARSEFLOAT PARIZQ . expression PARDER
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 119
    listArray                      shift and go to state 47

state 81

    (73) expression -> CORIZQ expressionList . CORDER
    (48) expressionList -> expressionList . COMA expression

    CORDER          shift and go to state 120
    COMA            shift and go to state 96


state 82

    (74) expression -> ID PARIZQ . expressionList PARDER
    (75) expression -> ID PARIZQ . PARDER
    (48) expressionList -> . expressionList COMA expression
    (49) expressionList -> . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    PARDER          shift and go to state 122
    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expressionList                 shift and go to state 121
    expression                     shift and go to state 58
    listArray                      shift and go to state 47

state 83

    (76) listArray -> ID CORIZQ . expression CORDER
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 123
    listArray                      shift and go to state 47

state 84

    (35) interfacecreation -> INTERFACE ID LLAVEIZQ . attributeList LLAVEDER PUNTOCOMA
    (36) attributeList -> . attributeList ID DOSPTS type PUNTOCOMA
    (37) attributeList -> . ID DOSPTS type PUNTOCOMA

    ID              shift and go to state 124

    attributeList                  shift and go to state 125

state 85

    (17) print -> CONSOLE PUNTO LOG PARIZQ . expressionList PARDER PUNTOCOMA
    (48) expressionList -> . expressionList COMA expression
    (49) expressionList -> . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expressionList                 shift and go to state 126
    expression                     shift and go to state 58
    listArray                      shift and go to state 47

state 86

    (18) ifinstruction -> IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 127


state 87

    (21) whileinstruction -> WHILE PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 128


state 88

    (24) interdeclaration -> VAR ID DOSPTS ID . IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA

    IGUAL           shift and go to state 129


state 89

    (22) declaration -> VAR ID DOSPTS type . IGUAL expression PUNTOCOMA
    (23) arraydeclaration -> VAR ID DOSPTS type . CORIZQ CORDER IGUAL expression PUNTOCOMA

    IGUAL           shift and go to state 130
    CORIZQ          shift and go to state 131


state 90

    (44) type -> NUMBER .

    IGUAL           reduce using rule 44 (type -> NUMBER .)
    CORIZQ          reduce using rule 44 (type -> NUMBER .)
    LLAVEIZQ        reduce using rule 44 (type -> NUMBER .)
    PARDER          reduce using rule 44 (type -> NUMBER .)
    COMA            reduce using rule 44 (type -> NUMBER .)
    PUNTOCOMA       reduce using rule 44 (type -> NUMBER .)


state 91

    (45) type -> FLOAT .

    IGUAL           reduce using rule 45 (type -> FLOAT .)
    CORIZQ          reduce using rule 45 (type -> FLOAT .)
    LLAVEIZQ        reduce using rule 45 (type -> FLOAT .)
    PARDER          reduce using rule 45 (type -> FLOAT .)
    COMA            reduce using rule 45 (type -> FLOAT .)
    PUNTOCOMA       reduce using rule 45 (type -> FLOAT .)


state 92

    (46) type -> STRING .

    IGUAL           reduce using rule 46 (type -> STRING .)
    CORIZQ          reduce using rule 46 (type -> STRING .)
    LLAVEIZQ        reduce using rule 46 (type -> STRING .)
    PARDER          reduce using rule 46 (type -> STRING .)
    COMA            reduce using rule 46 (type -> STRING .)
    PUNTOCOMA       reduce using rule 46 (type -> STRING .)


state 93

    (47) type -> BOOL .

    IGUAL           reduce using rule 47 (type -> BOOL .)
    CORIZQ          reduce using rule 47 (type -> BOOL .)
    LLAVEIZQ        reduce using rule 47 (type -> BOOL .)
    PARDER          reduce using rule 47 (type -> BOOL .)
    COMA            reduce using rule 47 (type -> BOOL .)
    PUNTOCOMA       reduce using rule 47 (type -> BOOL .)


state 94

    (27) assignment -> ID IGUAL expression PUNTOCOMA .

    CONSOLE         reduce using rule 27 (assignment -> ID IGUAL expression PUNTOCOMA .)
    IF              reduce using rule 27 (assignment -> ID IGUAL expression PUNTOCOMA .)
    WHILE           reduce using rule 27 (assignment -> ID IGUAL expression PUNTOCOMA .)
    VAR             reduce using rule 27 (assignment -> ID IGUAL expression PUNTOCOMA .)
    ID              reduce using rule 27 (assignment -> ID IGUAL expression PUNTOCOMA .)
    BREAK           reduce using rule 27 (assignment -> ID IGUAL expression PUNTOCOMA .)
    CONTINUE        reduce using rule 27 (assignment -> ID IGUAL expression PUNTOCOMA .)
    FUNC            reduce using rule 27 (assignment -> ID IGUAL expression PUNTOCOMA .)
    RETURN          reduce using rule 27 (assignment -> ID IGUAL expression PUNTOCOMA .)
    INTERFACE       reduce using rule 27 (assignment -> ID IGUAL expression PUNTOCOMA .)
    $end            reduce using rule 27 (assignment -> ID IGUAL expression PUNTOCOMA .)
    LLAVEDER        reduce using rule 27 (assignment -> ID IGUAL expression PUNTOCOMA .)


state 95

    (30) call -> ID PARIZQ expressionList PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 132


state 96

    (48) expressionList -> expressionList COMA . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 133
    listArray                      shift and go to state 47

state 97

    (31) call -> ID PARIZQ PARDER PUNTOCOMA .

    CONSOLE         reduce using rule 31 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    IF              reduce using rule 31 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    WHILE           reduce using rule 31 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    VAR             reduce using rule 31 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    ID              reduce using rule 31 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    BREAK           reduce using rule 31 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    CONTINUE        reduce using rule 31 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    FUNC            reduce using rule 31 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    RETURN          reduce using rule 31 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    INTERFACE       reduce using rule 31 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    $end            reduce using rule 31 (call -> ID PARIZQ PARDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 31 (call -> ID PARIZQ PARDER PUNTOCOMA .)


state 98

    (32) functionstmt -> FUNC ID funcparams functype . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 134


state 99

    (40) functype -> DOSPTS . type
    (44) type -> . NUMBER
    (45) type -> . FLOAT
    (46) type -> . STRING
    (47) type -> . BOOL

    NUMBER          shift and go to state 90
    FLOAT           shift and go to state 91
    STRING          shift and go to state 92
    BOOL            shift and go to state 93

    type                           shift and go to state 135

state 100

    (33) funcparams -> PARIZQ paramsList . PARDER
    (38) paramsList -> paramsList . COMA ID DOSPTS type

    PARDER          shift and go to state 136
    COMA            shift and go to state 137


state 101

    (34) funcparams -> PARIZQ PARDER .

    DOSPTS          reduce using rule 34 (funcparams -> PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 34 (funcparams -> PARIZQ PARDER .)


state 102

    (39) paramsList -> ID . DOSPTS type

    DOSPTS          shift and go to state 138


state 103

    (50) expression -> expression MAS expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PUNTOCOMA       reduce using rule 50 (expression -> expression MAS expression .)
    MAS             reduce using rule 50 (expression -> expression MAS expression .)
    MENOS           reduce using rule 50 (expression -> expression MAS expression .)
    MOD             reduce using rule 50 (expression -> expression MAS expression .)
    MENOR           reduce using rule 50 (expression -> expression MAS expression .)
    MAYOR           reduce using rule 50 (expression -> expression MAS expression .)
    MENORIG         reduce using rule 50 (expression -> expression MAS expression .)
    MAYORIG         reduce using rule 50 (expression -> expression MAS expression .)
    IGUALDAD        reduce using rule 50 (expression -> expression MAS expression .)
    DIF             reduce using rule 50 (expression -> expression MAS expression .)
    AND             reduce using rule 50 (expression -> expression MAS expression .)
    OR              reduce using rule 50 (expression -> expression MAS expression .)
    TERN            reduce using rule 50 (expression -> expression MAS expression .)
    PARDER          reduce using rule 50 (expression -> expression MAS expression .)
    COMA            reduce using rule 50 (expression -> expression MAS expression .)
    CORDER          reduce using rule 50 (expression -> expression MAS expression .)
    DOSPTS          reduce using rule 50 (expression -> expression MAS expression .)
    LLAVEDER        reduce using rule 50 (expression -> expression MAS expression .)
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65

  ! POR             [ reduce using rule 50 (expression -> expression MAS expression .) ]
  ! DIVIDIDO        [ reduce using rule 50 (expression -> expression MAS expression .) ]
  ! MAS             [ shift and go to state 62 ]
  ! MENOS           [ shift and go to state 63 ]
  ! MOD             [ shift and go to state 66 ]
  ! MENOR           [ shift and go to state 67 ]
  ! MAYOR           [ shift and go to state 68 ]
  ! MENORIG         [ shift and go to state 69 ]
  ! MAYORIG         [ shift and go to state 70 ]
  ! IGUALDAD        [ shift and go to state 71 ]
  ! DIF             [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! TERN            [ shift and go to state 75 ]


state 104

    (51) expression -> expression MENOS expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PUNTOCOMA       reduce using rule 51 (expression -> expression MENOS expression .)
    MAS             reduce using rule 51 (expression -> expression MENOS expression .)
    MENOS           reduce using rule 51 (expression -> expression MENOS expression .)
    MOD             reduce using rule 51 (expression -> expression MENOS expression .)
    MENOR           reduce using rule 51 (expression -> expression MENOS expression .)
    MAYOR           reduce using rule 51 (expression -> expression MENOS expression .)
    MENORIG         reduce using rule 51 (expression -> expression MENOS expression .)
    MAYORIG         reduce using rule 51 (expression -> expression MENOS expression .)
    IGUALDAD        reduce using rule 51 (expression -> expression MENOS expression .)
    DIF             reduce using rule 51 (expression -> expression MENOS expression .)
    AND             reduce using rule 51 (expression -> expression MENOS expression .)
    OR              reduce using rule 51 (expression -> expression MENOS expression .)
    TERN            reduce using rule 51 (expression -> expression MENOS expression .)
    PARDER          reduce using rule 51 (expression -> expression MENOS expression .)
    COMA            reduce using rule 51 (expression -> expression MENOS expression .)
    CORDER          reduce using rule 51 (expression -> expression MENOS expression .)
    DOSPTS          reduce using rule 51 (expression -> expression MENOS expression .)
    LLAVEDER        reduce using rule 51 (expression -> expression MENOS expression .)
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65

  ! POR             [ reduce using rule 51 (expression -> expression MENOS expression .) ]
  ! DIVIDIDO        [ reduce using rule 51 (expression -> expression MENOS expression .) ]
  ! MAS             [ shift and go to state 62 ]
  ! MENOS           [ shift and go to state 63 ]
  ! MOD             [ shift and go to state 66 ]
  ! MENOR           [ shift and go to state 67 ]
  ! MAYOR           [ shift and go to state 68 ]
  ! MENORIG         [ shift and go to state 69 ]
  ! MAYORIG         [ shift and go to state 70 ]
  ! IGUALDAD        [ shift and go to state 71 ]
  ! DIF             [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! TERN            [ shift and go to state 75 ]


state 105

    (52) expression -> expression POR expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PUNTOCOMA       reduce using rule 52 (expression -> expression POR expression .)
    MAS             reduce using rule 52 (expression -> expression POR expression .)
    MENOS           reduce using rule 52 (expression -> expression POR expression .)
    POR             reduce using rule 52 (expression -> expression POR expression .)
    DIVIDIDO        reduce using rule 52 (expression -> expression POR expression .)
    MOD             reduce using rule 52 (expression -> expression POR expression .)
    MENOR           reduce using rule 52 (expression -> expression POR expression .)
    MAYOR           reduce using rule 52 (expression -> expression POR expression .)
    MENORIG         reduce using rule 52 (expression -> expression POR expression .)
    MAYORIG         reduce using rule 52 (expression -> expression POR expression .)
    IGUALDAD        reduce using rule 52 (expression -> expression POR expression .)
    DIF             reduce using rule 52 (expression -> expression POR expression .)
    AND             reduce using rule 52 (expression -> expression POR expression .)
    OR              reduce using rule 52 (expression -> expression POR expression .)
    TERN            reduce using rule 52 (expression -> expression POR expression .)
    PARDER          reduce using rule 52 (expression -> expression POR expression .)
    COMA            reduce using rule 52 (expression -> expression POR expression .)
    CORDER          reduce using rule 52 (expression -> expression POR expression .)
    DOSPTS          reduce using rule 52 (expression -> expression POR expression .)
    LLAVEDER        reduce using rule 52 (expression -> expression POR expression .)

  ! MAS             [ shift and go to state 62 ]
  ! MENOS           [ shift and go to state 63 ]
  ! POR             [ shift and go to state 64 ]
  ! DIVIDIDO        [ shift and go to state 65 ]
  ! MOD             [ shift and go to state 66 ]
  ! MENOR           [ shift and go to state 67 ]
  ! MAYOR           [ shift and go to state 68 ]
  ! MENORIG         [ shift and go to state 69 ]
  ! MAYORIG         [ shift and go to state 70 ]
  ! IGUALDAD        [ shift and go to state 71 ]
  ! DIF             [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! TERN            [ shift and go to state 75 ]


state 106

    (53) expression -> expression DIVIDIDO expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PUNTOCOMA       reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    MAS             reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    MENOS           reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    POR             reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    DIVIDIDO        reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    MOD             reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    MENOR           reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    MAYOR           reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    MENORIG         reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    MAYORIG         reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    IGUALDAD        reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    DIF             reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    AND             reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    OR              reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    TERN            reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    PARDER          reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    COMA            reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    CORDER          reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    DOSPTS          reduce using rule 53 (expression -> expression DIVIDIDO expression .)
    LLAVEDER        reduce using rule 53 (expression -> expression DIVIDIDO expression .)

  ! MAS             [ shift and go to state 62 ]
  ! MENOS           [ shift and go to state 63 ]
  ! POR             [ shift and go to state 64 ]
  ! DIVIDIDO        [ shift and go to state 65 ]
  ! MOD             [ shift and go to state 66 ]
  ! MENOR           [ shift and go to state 67 ]
  ! MAYOR           [ shift and go to state 68 ]
  ! MENORIG         [ shift and go to state 69 ]
  ! MAYORIG         [ shift and go to state 70 ]
  ! IGUALDAD        [ shift and go to state 71 ]
  ! DIF             [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! TERN            [ shift and go to state 75 ]


state 107

    (54) expression -> expression MOD expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PUNTOCOMA       reduce using rule 54 (expression -> expression MOD expression .)
    PARDER          reduce using rule 54 (expression -> expression MOD expression .)
    COMA            reduce using rule 54 (expression -> expression MOD expression .)
    CORDER          reduce using rule 54 (expression -> expression MOD expression .)
    DOSPTS          reduce using rule 54 (expression -> expression MOD expression .)
    LLAVEDER        reduce using rule 54 (expression -> expression MOD expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75

  ! MAS             [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! MENOS           [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! POR             [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! DIVIDIDO        [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! MOD             [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! MENOR           [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! MAYOR           [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! MENORIG         [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! MAYORIG         [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! IGUALDAD        [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! DIF             [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! AND             [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! OR              [ reduce using rule 54 (expression -> expression MOD expression .) ]
  ! TERN            [ reduce using rule 54 (expression -> expression MOD expression .) ]


state 108

    (56) expression -> expression MENOR expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PUNTOCOMA       reduce using rule 56 (expression -> expression MENOR expression .)
    MOD             reduce using rule 56 (expression -> expression MENOR expression .)
    MENOR           reduce using rule 56 (expression -> expression MENOR expression .)
    MAYOR           reduce using rule 56 (expression -> expression MENOR expression .)
    IGUALDAD        reduce using rule 56 (expression -> expression MENOR expression .)
    DIF             reduce using rule 56 (expression -> expression MENOR expression .)
    AND             reduce using rule 56 (expression -> expression MENOR expression .)
    OR              reduce using rule 56 (expression -> expression MENOR expression .)
    TERN            reduce using rule 56 (expression -> expression MENOR expression .)
    PARDER          reduce using rule 56 (expression -> expression MENOR expression .)
    COMA            reduce using rule 56 (expression -> expression MENOR expression .)
    CORDER          reduce using rule 56 (expression -> expression MENOR expression .)
    DOSPTS          reduce using rule 56 (expression -> expression MENOR expression .)
    LLAVEDER        reduce using rule 56 (expression -> expression MENOR expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70

  ! MAS             [ reduce using rule 56 (expression -> expression MENOR expression .) ]
  ! MENOS           [ reduce using rule 56 (expression -> expression MENOR expression .) ]
  ! POR             [ reduce using rule 56 (expression -> expression MENOR expression .) ]
  ! DIVIDIDO        [ reduce using rule 56 (expression -> expression MENOR expression .) ]
  ! MENORIG         [ reduce using rule 56 (expression -> expression MENOR expression .) ]
  ! MAYORIG         [ reduce using rule 56 (expression -> expression MENOR expression .) ]
  ! MOD             [ shift and go to state 66 ]
  ! MENOR           [ shift and go to state 67 ]
  ! MAYOR           [ shift and go to state 68 ]
  ! IGUALDAD        [ shift and go to state 71 ]
  ! DIF             [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! TERN            [ shift and go to state 75 ]


state 109

    (57) expression -> expression MAYOR expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PUNTOCOMA       reduce using rule 57 (expression -> expression MAYOR expression .)
    MOD             reduce using rule 57 (expression -> expression MAYOR expression .)
    MENOR           reduce using rule 57 (expression -> expression MAYOR expression .)
    MAYOR           reduce using rule 57 (expression -> expression MAYOR expression .)
    IGUALDAD        reduce using rule 57 (expression -> expression MAYOR expression .)
    DIF             reduce using rule 57 (expression -> expression MAYOR expression .)
    AND             reduce using rule 57 (expression -> expression MAYOR expression .)
    OR              reduce using rule 57 (expression -> expression MAYOR expression .)
    TERN            reduce using rule 57 (expression -> expression MAYOR expression .)
    PARDER          reduce using rule 57 (expression -> expression MAYOR expression .)
    COMA            reduce using rule 57 (expression -> expression MAYOR expression .)
    CORDER          reduce using rule 57 (expression -> expression MAYOR expression .)
    DOSPTS          reduce using rule 57 (expression -> expression MAYOR expression .)
    LLAVEDER        reduce using rule 57 (expression -> expression MAYOR expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70

  ! MAS             [ reduce using rule 57 (expression -> expression MAYOR expression .) ]
  ! MENOS           [ reduce using rule 57 (expression -> expression MAYOR expression .) ]
  ! POR             [ reduce using rule 57 (expression -> expression MAYOR expression .) ]
  ! DIVIDIDO        [ reduce using rule 57 (expression -> expression MAYOR expression .) ]
  ! MENORIG         [ reduce using rule 57 (expression -> expression MAYOR expression .) ]
  ! MAYORIG         [ reduce using rule 57 (expression -> expression MAYOR expression .) ]
  ! MOD             [ shift and go to state 66 ]
  ! MENOR           [ shift and go to state 67 ]
  ! MAYOR           [ shift and go to state 68 ]
  ! IGUALDAD        [ shift and go to state 71 ]
  ! DIF             [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! TERN            [ shift and go to state 75 ]


state 110

    (58) expression -> expression MENORIG expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PUNTOCOMA       reduce using rule 58 (expression -> expression MENORIG expression .)
    MOD             reduce using rule 58 (expression -> expression MENORIG expression .)
    MENOR           reduce using rule 58 (expression -> expression MENORIG expression .)
    MAYOR           reduce using rule 58 (expression -> expression MENORIG expression .)
    MENORIG         reduce using rule 58 (expression -> expression MENORIG expression .)
    MAYORIG         reduce using rule 58 (expression -> expression MENORIG expression .)
    IGUALDAD        reduce using rule 58 (expression -> expression MENORIG expression .)
    DIF             reduce using rule 58 (expression -> expression MENORIG expression .)
    AND             reduce using rule 58 (expression -> expression MENORIG expression .)
    OR              reduce using rule 58 (expression -> expression MENORIG expression .)
    TERN            reduce using rule 58 (expression -> expression MENORIG expression .)
    PARDER          reduce using rule 58 (expression -> expression MENORIG expression .)
    COMA            reduce using rule 58 (expression -> expression MENORIG expression .)
    CORDER          reduce using rule 58 (expression -> expression MENORIG expression .)
    DOSPTS          reduce using rule 58 (expression -> expression MENORIG expression .)
    LLAVEDER        reduce using rule 58 (expression -> expression MENORIG expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65

  ! MAS             [ reduce using rule 58 (expression -> expression MENORIG expression .) ]
  ! MENOS           [ reduce using rule 58 (expression -> expression MENORIG expression .) ]
  ! POR             [ reduce using rule 58 (expression -> expression MENORIG expression .) ]
  ! DIVIDIDO        [ reduce using rule 58 (expression -> expression MENORIG expression .) ]
  ! MOD             [ shift and go to state 66 ]
  ! MENOR           [ shift and go to state 67 ]
  ! MAYOR           [ shift and go to state 68 ]
  ! MENORIG         [ shift and go to state 69 ]
  ! MAYORIG         [ shift and go to state 70 ]
  ! IGUALDAD        [ shift and go to state 71 ]
  ! DIF             [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! TERN            [ shift and go to state 75 ]


state 111

    (59) expression -> expression MAYORIG expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PUNTOCOMA       reduce using rule 59 (expression -> expression MAYORIG expression .)
    MOD             reduce using rule 59 (expression -> expression MAYORIG expression .)
    MENOR           reduce using rule 59 (expression -> expression MAYORIG expression .)
    MAYOR           reduce using rule 59 (expression -> expression MAYORIG expression .)
    MENORIG         reduce using rule 59 (expression -> expression MAYORIG expression .)
    MAYORIG         reduce using rule 59 (expression -> expression MAYORIG expression .)
    IGUALDAD        reduce using rule 59 (expression -> expression MAYORIG expression .)
    DIF             reduce using rule 59 (expression -> expression MAYORIG expression .)
    AND             reduce using rule 59 (expression -> expression MAYORIG expression .)
    OR              reduce using rule 59 (expression -> expression MAYORIG expression .)
    TERN            reduce using rule 59 (expression -> expression MAYORIG expression .)
    PARDER          reduce using rule 59 (expression -> expression MAYORIG expression .)
    COMA            reduce using rule 59 (expression -> expression MAYORIG expression .)
    CORDER          reduce using rule 59 (expression -> expression MAYORIG expression .)
    DOSPTS          reduce using rule 59 (expression -> expression MAYORIG expression .)
    LLAVEDER        reduce using rule 59 (expression -> expression MAYORIG expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65

  ! MAS             [ reduce using rule 59 (expression -> expression MAYORIG expression .) ]
  ! MENOS           [ reduce using rule 59 (expression -> expression MAYORIG expression .) ]
  ! POR             [ reduce using rule 59 (expression -> expression MAYORIG expression .) ]
  ! DIVIDIDO        [ reduce using rule 59 (expression -> expression MAYORIG expression .) ]
  ! MOD             [ shift and go to state 66 ]
  ! MENOR           [ shift and go to state 67 ]
  ! MAYOR           [ shift and go to state 68 ]
  ! MENORIG         [ shift and go to state 69 ]
  ! MAYORIG         [ shift and go to state 70 ]
  ! IGUALDAD        [ shift and go to state 71 ]
  ! DIF             [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! TERN            [ shift and go to state 75 ]


state 112

    (60) expression -> expression IGUALDAD expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PUNTOCOMA       reduce using rule 60 (expression -> expression IGUALDAD expression .)
    PARDER          reduce using rule 60 (expression -> expression IGUALDAD expression .)
    COMA            reduce using rule 60 (expression -> expression IGUALDAD expression .)
    CORDER          reduce using rule 60 (expression -> expression IGUALDAD expression .)
    DOSPTS          reduce using rule 60 (expression -> expression IGUALDAD expression .)
    LLAVEDER        reduce using rule 60 (expression -> expression IGUALDAD expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75

  ! MAS             [ reduce using rule 60 (expression -> expression IGUALDAD expression .) ]
  ! MENOS           [ reduce using rule 60 (expression -> expression IGUALDAD expression .) ]
  ! POR             [ reduce using rule 60 (expression -> expression IGUALDAD expression .) ]
  ! DIVIDIDO        [ reduce using rule 60 (expression -> expression IGUALDAD expression .) ]
  ! MOD             [ reduce using rule 60 (expression -> expression IGUALDAD expression .) ]
  ! MENOR           [ reduce using rule 60 (expression -> expression IGUALDAD expression .) ]
  ! MAYOR           [ reduce using rule 60 (expression -> expression IGUALDAD expression .) ]
  ! MENORIG         [ reduce using rule 60 (expression -> expression IGUALDAD expression .) ]
  ! MAYORIG         [ reduce using rule 60 (expression -> expression IGUALDAD expression .) ]
  ! IGUALDAD        [ reduce using rule 60 (expression -> expression IGUALDAD expression .) ]
  ! DIF             [ reduce using rule 60 (expression -> expression IGUALDAD expression .) ]
  ! AND             [ reduce using rule 60 (expression -> expression IGUALDAD expression .) ]
  ! OR              [ reduce using rule 60 (expression -> expression IGUALDAD expression .) ]
  ! TERN            [ reduce using rule 60 (expression -> expression IGUALDAD expression .) ]


state 113

    (61) expression -> expression DIF expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PUNTOCOMA       reduce using rule 61 (expression -> expression DIF expression .)
    PARDER          reduce using rule 61 (expression -> expression DIF expression .)
    COMA            reduce using rule 61 (expression -> expression DIF expression .)
    CORDER          reduce using rule 61 (expression -> expression DIF expression .)
    DOSPTS          reduce using rule 61 (expression -> expression DIF expression .)
    LLAVEDER        reduce using rule 61 (expression -> expression DIF expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75

  ! MAS             [ reduce using rule 61 (expression -> expression DIF expression .) ]
  ! MENOS           [ reduce using rule 61 (expression -> expression DIF expression .) ]
  ! POR             [ reduce using rule 61 (expression -> expression DIF expression .) ]
  ! DIVIDIDO        [ reduce using rule 61 (expression -> expression DIF expression .) ]
  ! MOD             [ reduce using rule 61 (expression -> expression DIF expression .) ]
  ! MENOR           [ reduce using rule 61 (expression -> expression DIF expression .) ]
  ! MAYOR           [ reduce using rule 61 (expression -> expression DIF expression .) ]
  ! MENORIG         [ reduce using rule 61 (expression -> expression DIF expression .) ]
  ! MAYORIG         [ reduce using rule 61 (expression -> expression DIF expression .) ]
  ! IGUALDAD        [ reduce using rule 61 (expression -> expression DIF expression .) ]
  ! DIF             [ reduce using rule 61 (expression -> expression DIF expression .) ]
  ! AND             [ reduce using rule 61 (expression -> expression DIF expression .) ]
  ! OR              [ reduce using rule 61 (expression -> expression DIF expression .) ]
  ! TERN            [ reduce using rule 61 (expression -> expression DIF expression .) ]


state 114

    (62) expression -> expression AND expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PUNTOCOMA       reduce using rule 62 (expression -> expression AND expression .)
    MOD             reduce using rule 62 (expression -> expression AND expression .)
    IGUALDAD        reduce using rule 62 (expression -> expression AND expression .)
    DIF             reduce using rule 62 (expression -> expression AND expression .)
    AND             reduce using rule 62 (expression -> expression AND expression .)
    OR              reduce using rule 62 (expression -> expression AND expression .)
    TERN            reduce using rule 62 (expression -> expression AND expression .)
    PARDER          reduce using rule 62 (expression -> expression AND expression .)
    COMA            reduce using rule 62 (expression -> expression AND expression .)
    CORDER          reduce using rule 62 (expression -> expression AND expression .)
    DOSPTS          reduce using rule 62 (expression -> expression AND expression .)
    LLAVEDER        reduce using rule 62 (expression -> expression AND expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70

  ! MAS             [ reduce using rule 62 (expression -> expression AND expression .) ]
  ! MENOS           [ reduce using rule 62 (expression -> expression AND expression .) ]
  ! POR             [ reduce using rule 62 (expression -> expression AND expression .) ]
  ! DIVIDIDO        [ reduce using rule 62 (expression -> expression AND expression .) ]
  ! MENOR           [ reduce using rule 62 (expression -> expression AND expression .) ]
  ! MAYOR           [ reduce using rule 62 (expression -> expression AND expression .) ]
  ! MENORIG         [ reduce using rule 62 (expression -> expression AND expression .) ]
  ! MAYORIG         [ reduce using rule 62 (expression -> expression AND expression .) ]
  ! MOD             [ shift and go to state 66 ]
  ! IGUALDAD        [ shift and go to state 71 ]
  ! DIF             [ shift and go to state 72 ]
  ! AND             [ shift and go to state 73 ]
  ! OR              [ shift and go to state 74 ]
  ! TERN            [ shift and go to state 75 ]


state 115

    (63) expression -> expression OR expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PUNTOCOMA       reduce using rule 63 (expression -> expression OR expression .)
    PARDER          reduce using rule 63 (expression -> expression OR expression .)
    COMA            reduce using rule 63 (expression -> expression OR expression .)
    CORDER          reduce using rule 63 (expression -> expression OR expression .)
    DOSPTS          reduce using rule 63 (expression -> expression OR expression .)
    LLAVEDER        reduce using rule 63 (expression -> expression OR expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75

  ! MAS             [ reduce using rule 63 (expression -> expression OR expression .) ]
  ! MENOS           [ reduce using rule 63 (expression -> expression OR expression .) ]
  ! POR             [ reduce using rule 63 (expression -> expression OR expression .) ]
  ! DIVIDIDO        [ reduce using rule 63 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 63 (expression -> expression OR expression .) ]
  ! MENOR           [ reduce using rule 63 (expression -> expression OR expression .) ]
  ! MAYOR           [ reduce using rule 63 (expression -> expression OR expression .) ]
  ! MENORIG         [ reduce using rule 63 (expression -> expression OR expression .) ]
  ! MAYORIG         [ reduce using rule 63 (expression -> expression OR expression .) ]
  ! IGUALDAD        [ reduce using rule 63 (expression -> expression OR expression .) ]
  ! DIF             [ reduce using rule 63 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 63 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 63 (expression -> expression OR expression .) ]
  ! TERN            [ reduce using rule 63 (expression -> expression OR expression .) ]


state 116

    (68) expression -> expression TERN expression . DOSPTS expression
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    DOSPTS          shift and go to state 139
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75


state 117

    (65) expression -> PARIZQ expression PARDER .

    PUNTOCOMA       reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    MAS             reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    MENOS           reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    POR             reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    MOD             reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    MENOR           reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    MAYOR           reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    MENORIG         reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    MAYORIG         reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    IGUALDAD        reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    DIF             reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    AND             reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    OR              reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    TERN            reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    PARDER          reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    COMA            reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    CORDER          reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    DOSPTS          reduce using rule 65 (expression -> PARIZQ expression PARDER .)
    LLAVEDER        reduce using rule 65 (expression -> PARIZQ expression PARDER .)


state 118

    (66) expression -> PARSEINT PARIZQ expression . PARDER
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 140
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75


state 119

    (67) expression -> PARSEFLOAT PARIZQ expression . PARDER
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 141
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75


state 120

    (73) expression -> CORIZQ expressionList CORDER .

    PUNTOCOMA       reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    MAS             reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    MENOS           reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    POR             reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    DIVIDIDO        reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    MOD             reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    MENOR           reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    MAYOR           reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    MENORIG         reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    MAYORIG         reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    IGUALDAD        reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    DIF             reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    AND             reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    OR              reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    TERN            reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    PARDER          reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    COMA            reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    CORDER          reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    DOSPTS          reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)
    LLAVEDER        reduce using rule 73 (expression -> CORIZQ expressionList CORDER .)


state 121

    (74) expression -> ID PARIZQ expressionList . PARDER
    (48) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 142
    COMA            shift and go to state 96


state 122

    (75) expression -> ID PARIZQ PARDER .

    PUNTOCOMA       reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    MAS             reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    POR             reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    MOD             reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    MENOR           reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    MAYOR           reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    MENORIG         reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    MAYORIG         reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    IGUALDAD        reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    DIF             reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    AND             reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    OR              reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    TERN            reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    COMA            reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    DOSPTS          reduce using rule 75 (expression -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 75 (expression -> ID PARIZQ PARDER .)


state 123

    (76) listArray -> ID CORIZQ expression . CORDER
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    CORDER          shift and go to state 143
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75


state 124

    (37) attributeList -> ID . DOSPTS type PUNTOCOMA

    DOSPTS          shift and go to state 144


state 125

    (35) interfacecreation -> INTERFACE ID LLAVEIZQ attributeList . LLAVEDER PUNTOCOMA
    (36) attributeList -> attributeList . ID DOSPTS type PUNTOCOMA

    LLAVEDER        shift and go to state 146
    ID              shift and go to state 145


state 126

    (17) print -> CONSOLE PUNTO LOG PARIZQ expressionList . PARDER PUNTOCOMA
    (48) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 147
    COMA            shift and go to state 96


state 127

    (18) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (21) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (22) declaration -> . VAR ID DOSPTS type IGUAL expression PUNTOCOMA
    (23) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA
    (27) assignment -> . ID IGUAL expression PUNTOCOMA
    (42) breakstmt -> . BREAK PUNTOCOMA
    (43) continuestmt -> . CONTINUE PUNTOCOMA
    (32) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (30) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (31) call -> . ID PARIZQ PARDER PUNTOCOMA
    (28) returnstmt -> . RETURN expression PUNTOCOMA
    (29) returnstmt -> . RETURN PUNTOCOMA
    (35) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA
    (24) interdeclaration -> . VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA

    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    block                          shift and go to state 148
    ifinstruction                  shift and go to state 5
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 128

    (21) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (21) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (22) declaration -> . VAR ID DOSPTS type IGUAL expression PUNTOCOMA
    (23) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA
    (27) assignment -> . ID IGUAL expression PUNTOCOMA
    (42) breakstmt -> . BREAK PUNTOCOMA
    (43) continuestmt -> . CONTINUE PUNTOCOMA
    (32) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (30) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (31) call -> . ID PARIZQ PARDER PUNTOCOMA
    (28) returnstmt -> . RETURN expression PUNTOCOMA
    (29) returnstmt -> . RETURN PUNTOCOMA
    (35) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA
    (24) interdeclaration -> . VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA

    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    block                          shift and go to state 149
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 129

    (24) interdeclaration -> VAR ID DOSPTS ID IGUAL . LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA

    LLAVEIZQ        shift and go to state 150


state 130

    (22) declaration -> VAR ID DOSPTS type IGUAL . expression PUNTOCOMA
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 151
    listArray                      shift and go to state 47

state 131

    (23) arraydeclaration -> VAR ID DOSPTS type CORIZQ . CORDER IGUAL expression PUNTOCOMA

    CORDER          shift and go to state 152


state 132

    (30) call -> ID PARIZQ expressionList PARDER PUNTOCOMA .

    CONSOLE         reduce using rule 30 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    IF              reduce using rule 30 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    WHILE           reduce using rule 30 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    VAR             reduce using rule 30 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    ID              reduce using rule 30 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    BREAK           reduce using rule 30 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    CONTINUE        reduce using rule 30 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    FUNC            reduce using rule 30 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    RETURN          reduce using rule 30 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    INTERFACE       reduce using rule 30 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    $end            reduce using rule 30 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 30 (call -> ID PARIZQ expressionList PARDER PUNTOCOMA .)


state 133

    (48) expressionList -> expressionList COMA expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 48 (expressionList -> expressionList COMA expression .)
    COMA            reduce using rule 48 (expressionList -> expressionList COMA expression .)
    CORDER          reduce using rule 48 (expressionList -> expressionList COMA expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75


state 134

    (32) functionstmt -> FUNC ID funcparams functype LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (21) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (22) declaration -> . VAR ID DOSPTS type IGUAL expression PUNTOCOMA
    (23) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA
    (27) assignment -> . ID IGUAL expression PUNTOCOMA
    (42) breakstmt -> . BREAK PUNTOCOMA
    (43) continuestmt -> . CONTINUE PUNTOCOMA
    (32) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (30) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (31) call -> . ID PARIZQ PARDER PUNTOCOMA
    (28) returnstmt -> . RETURN expression PUNTOCOMA
    (29) returnstmt -> . RETURN PUNTOCOMA
    (35) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA
    (24) interdeclaration -> . VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA

    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    block                          shift and go to state 153
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 135

    (40) functype -> DOSPTS type .

    LLAVEIZQ        reduce using rule 40 (functype -> DOSPTS type .)


state 136

    (33) funcparams -> PARIZQ paramsList PARDER .

    DOSPTS          reduce using rule 33 (funcparams -> PARIZQ paramsList PARDER .)
    LLAVEIZQ        reduce using rule 33 (funcparams -> PARIZQ paramsList PARDER .)


state 137

    (38) paramsList -> paramsList COMA . ID DOSPTS type

    ID              shift and go to state 154


state 138

    (39) paramsList -> ID DOSPTS . type
    (44) type -> . NUMBER
    (45) type -> . FLOAT
    (46) type -> . STRING
    (47) type -> . BOOL

    NUMBER          shift and go to state 90
    FLOAT           shift and go to state 91
    STRING          shift and go to state 92
    BOOL            shift and go to state 93

    type                           shift and go to state 155

state 139

    (68) expression -> expression TERN expression DOSPTS . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 156
    listArray                      shift and go to state 47

state 140

    (66) expression -> PARSEINT PARIZQ expression PARDER .

    PUNTOCOMA       reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    MAS             reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    MENOS           reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    POR             reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    MOD             reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    MENOR           reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    MAYOR           reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    MENORIG         reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    MAYORIG         reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    IGUALDAD        reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    DIF             reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    AND             reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    OR              reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    TERN            reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    PARDER          reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    COMA            reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    CORDER          reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    DOSPTS          reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)
    LLAVEDER        reduce using rule 66 (expression -> PARSEINT PARIZQ expression PARDER .)


state 141

    (67) expression -> PARSEFLOAT PARIZQ expression PARDER .

    PUNTOCOMA       reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    MAS             reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    MENOS           reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    POR             reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    MOD             reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    MENOR           reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    MAYOR           reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    MENORIG         reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    MAYORIG         reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    IGUALDAD        reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    DIF             reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    AND             reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    OR              reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    TERN            reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    PARDER          reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    COMA            reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    CORDER          reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    DOSPTS          reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)
    LLAVEDER        reduce using rule 67 (expression -> PARSEFLOAT PARIZQ expression PARDER .)


state 142

    (74) expression -> ID PARIZQ expressionList PARDER .

    PUNTOCOMA       reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    MAS             reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    MENOS           reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    POR             reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    DIVIDIDO        reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    MOD             reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    MENOR           reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    MAYOR           reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    MENORIG         reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    MAYORIG         reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    IGUALDAD        reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    DIF             reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    AND             reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    OR              reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    TERN            reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    PARDER          reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    COMA            reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    CORDER          reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    DOSPTS          reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)
    LLAVEDER        reduce using rule 74 (expression -> ID PARIZQ expressionList PARDER .)


state 143

    (76) listArray -> ID CORIZQ expression CORDER .

    PUNTOCOMA       reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    MAS             reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    MENOS           reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    POR             reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    DIVIDIDO        reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    MOD             reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    MENOR           reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    MAYOR           reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    MENORIG         reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    MAYORIG         reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    IGUALDAD        reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    DIF             reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    AND             reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    OR              reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    TERN            reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    PARDER          reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    COMA            reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    CORDER          reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    DOSPTS          reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)
    LLAVEDER        reduce using rule 76 (listArray -> ID CORIZQ expression CORDER .)


state 144

    (37) attributeList -> ID DOSPTS . type PUNTOCOMA
    (44) type -> . NUMBER
    (45) type -> . FLOAT
    (46) type -> . STRING
    (47) type -> . BOOL

    NUMBER          shift and go to state 90
    FLOAT           shift and go to state 91
    STRING          shift and go to state 92
    BOOL            shift and go to state 93

    type                           shift and go to state 157

state 145

    (36) attributeList -> attributeList ID . DOSPTS type PUNTOCOMA

    DOSPTS          shift and go to state 158


state 146

    (35) interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 159


state 147

    (17) print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 160


state 148

    (18) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (21) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (22) declaration -> . VAR ID DOSPTS type IGUAL expression PUNTOCOMA
    (23) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA
    (27) assignment -> . ID IGUAL expression PUNTOCOMA
    (42) breakstmt -> . BREAK PUNTOCOMA
    (43) continuestmt -> . CONTINUE PUNTOCOMA
    (32) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (30) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (31) call -> . ID PARIZQ PARDER PUNTOCOMA
    (28) returnstmt -> . RETURN expression PUNTOCOMA
    (29) returnstmt -> . RETURN PUNTOCOMA
    (35) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA
    (24) interdeclaration -> . VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA

    LLAVEDER        shift and go to state 161
    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    ifinstruction                  shift and go to state 5
    instruccion                    shift and go to state 27
    print                          shift and go to state 4
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 149

    (21) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (21) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (22) declaration -> . VAR ID DOSPTS type IGUAL expression PUNTOCOMA
    (23) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA
    (27) assignment -> . ID IGUAL expression PUNTOCOMA
    (42) breakstmt -> . BREAK PUNTOCOMA
    (43) continuestmt -> . CONTINUE PUNTOCOMA
    (32) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (30) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (31) call -> . ID PARIZQ PARDER PUNTOCOMA
    (28) returnstmt -> . RETURN expression PUNTOCOMA
    (29) returnstmt -> . RETURN PUNTOCOMA
    (35) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA
    (24) interdeclaration -> . VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA

    LLAVEDER        shift and go to state 162
    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    instruccion                    shift and go to state 27
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 150

    (24) interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ . interfaceContent LLAVEDER PUNTOCOMA
    (25) interfaceContent -> . interfaceContent COMA ID DOSPTS expression
    (26) interfaceContent -> . ID DOSPTS expression

    ID              shift and go to state 163

    interfaceContent               shift and go to state 164

state 151

    (22) declaration -> VAR ID DOSPTS type IGUAL expression . PUNTOCOMA
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PUNTOCOMA       shift and go to state 165
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75


state 152

    (23) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER . IGUAL expression PUNTOCOMA

    IGUAL           shift and go to state 166


state 153

    (32) functionstmt -> FUNC ID funcparams functype LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (21) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (22) declaration -> . VAR ID DOSPTS type IGUAL expression PUNTOCOMA
    (23) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA
    (27) assignment -> . ID IGUAL expression PUNTOCOMA
    (42) breakstmt -> . BREAK PUNTOCOMA
    (43) continuestmt -> . CONTINUE PUNTOCOMA
    (32) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (30) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (31) call -> . ID PARIZQ PARDER PUNTOCOMA
    (28) returnstmt -> . RETURN expression PUNTOCOMA
    (29) returnstmt -> . RETURN PUNTOCOMA
    (35) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA
    (24) interdeclaration -> . VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA

    LLAVEDER        shift and go to state 167
    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    instruccion                    shift and go to state 27
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 154

    (38) paramsList -> paramsList COMA ID . DOSPTS type

    DOSPTS          shift and go to state 168


state 155

    (39) paramsList -> ID DOSPTS type .

    PARDER          reduce using rule 39 (paramsList -> ID DOSPTS type .)
    COMA            reduce using rule 39 (paramsList -> ID DOSPTS type .)


state 156

    (68) expression -> expression TERN expression DOSPTS expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for IGUALDAD resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PUNTOCOMA       reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .)
    PARDER          reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .)
    COMA            reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .)
    CORDER          reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .)
    DOSPTS          reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .)
    LLAVEDER        reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75

  ! MAS             [ reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MENOS           [ reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .) ]
  ! POR             [ reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .) ]
  ! DIVIDIDO        [ reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MOD             [ reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MENOR           [ reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MAYOR           [ reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MENORIG         [ reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MAYORIG         [ reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .) ]
  ! IGUALDAD        [ reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .) ]
  ! DIF             [ reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .) ]
  ! AND             [ reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .) ]
  ! OR              [ reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .) ]
  ! TERN            [ reduce using rule 68 (expression -> expression TERN expression DOSPTS expression .) ]


state 157

    (37) attributeList -> ID DOSPTS type . PUNTOCOMA

    PUNTOCOMA       shift and go to state 169


state 158

    (36) attributeList -> attributeList ID DOSPTS . type PUNTOCOMA
    (44) type -> . NUMBER
    (45) type -> . FLOAT
    (46) type -> . STRING
    (47) type -> . BOOL

    NUMBER          shift and go to state 90
    FLOAT           shift and go to state 91
    STRING          shift and go to state 92
    BOOL            shift and go to state 93

    type                           shift and go to state 170

state 159

    (35) interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA .

    CONSOLE         reduce using rule 35 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA .)
    IF              reduce using rule 35 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA .)
    WHILE           reduce using rule 35 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA .)
    VAR             reduce using rule 35 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA .)
    ID              reduce using rule 35 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA .)
    BREAK           reduce using rule 35 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA .)
    CONTINUE        reduce using rule 35 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA .)
    FUNC            reduce using rule 35 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA .)
    RETURN          reduce using rule 35 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA .)
    INTERFACE       reduce using rule 35 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA .)
    $end            reduce using rule 35 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 35 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA .)


state 160

    (17) print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA .

    CONSOLE         reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA .)
    IF              reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA .)
    WHILE           reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA .)
    VAR             reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA .)
    ID              reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA .)
    BREAK           reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA .)
    CONTINUE        reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA .)
    FUNC            reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA .)
    RETURN          reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA .)
    INTERFACE       reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA .)
    $end            reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 17 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA .)


state 161

    (18) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER . ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER . ELSE ifinstruction
    (20) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .

    ELSE            shift and go to state 171
    CONSOLE         reduce using rule 20 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 20 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 20 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 20 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 20 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 20 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 20 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 20 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 20 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 20 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 20 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 20 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)


state 162

    (21) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 21 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 21 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 21 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 21 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 21 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 21 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 21 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 21 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 21 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 21 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 21 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 21 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)


state 163

    (26) interfaceContent -> ID . DOSPTS expression

    DOSPTS          shift and go to state 172


state 164

    (24) interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent . LLAVEDER PUNTOCOMA
    (25) interfaceContent -> interfaceContent . COMA ID DOSPTS expression

    LLAVEDER        shift and go to state 173
    COMA            shift and go to state 174


state 165

    (22) declaration -> VAR ID DOSPTS type IGUAL expression PUNTOCOMA .

    CONSOLE         reduce using rule 22 (declaration -> VAR ID DOSPTS type IGUAL expression PUNTOCOMA .)
    IF              reduce using rule 22 (declaration -> VAR ID DOSPTS type IGUAL expression PUNTOCOMA .)
    WHILE           reduce using rule 22 (declaration -> VAR ID DOSPTS type IGUAL expression PUNTOCOMA .)
    VAR             reduce using rule 22 (declaration -> VAR ID DOSPTS type IGUAL expression PUNTOCOMA .)
    ID              reduce using rule 22 (declaration -> VAR ID DOSPTS type IGUAL expression PUNTOCOMA .)
    BREAK           reduce using rule 22 (declaration -> VAR ID DOSPTS type IGUAL expression PUNTOCOMA .)
    CONTINUE        reduce using rule 22 (declaration -> VAR ID DOSPTS type IGUAL expression PUNTOCOMA .)
    FUNC            reduce using rule 22 (declaration -> VAR ID DOSPTS type IGUAL expression PUNTOCOMA .)
    RETURN          reduce using rule 22 (declaration -> VAR ID DOSPTS type IGUAL expression PUNTOCOMA .)
    INTERFACE       reduce using rule 22 (declaration -> VAR ID DOSPTS type IGUAL expression PUNTOCOMA .)
    $end            reduce using rule 22 (declaration -> VAR ID DOSPTS type IGUAL expression PUNTOCOMA .)
    LLAVEDER        reduce using rule 22 (declaration -> VAR ID DOSPTS type IGUAL expression PUNTOCOMA .)


state 166

    (23) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL . expression PUNTOCOMA
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 175
    listArray                      shift and go to state 47

state 167

    (32) functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 32 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 32 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 32 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 32 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 32 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 32 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 32 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 32 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 32 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 32 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 32 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 32 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)


state 168

    (38) paramsList -> paramsList COMA ID DOSPTS . type
    (44) type -> . NUMBER
    (45) type -> . FLOAT
    (46) type -> . STRING
    (47) type -> . BOOL

    NUMBER          shift and go to state 90
    FLOAT           shift and go to state 91
    STRING          shift and go to state 92
    BOOL            shift and go to state 93

    type                           shift and go to state 176

state 169

    (37) attributeList -> ID DOSPTS type PUNTOCOMA .

    LLAVEDER        reduce using rule 37 (attributeList -> ID DOSPTS type PUNTOCOMA .)
    ID              reduce using rule 37 (attributeList -> ID DOSPTS type PUNTOCOMA .)


state 170

    (36) attributeList -> attributeList ID DOSPTS type . PUNTOCOMA

    PUNTOCOMA       shift and go to state 177


state 171

    (18) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE . LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE . ifinstruction
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 178
    IF              shift and go to state 18

    ifinstruction                  shift and go to state 179

state 172

    (26) interfaceContent -> ID DOSPTS . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 180
    listArray                      shift and go to state 47

state 173

    (24) interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 181


state 174

    (25) interfaceContent -> interfaceContent COMA . ID DOSPTS expression

    ID              shift and go to state 182


state 175

    (23) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL expression . PUNTOCOMA
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    PUNTOCOMA       shift and go to state 183
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75


state 176

    (38) paramsList -> paramsList COMA ID DOSPTS type .

    PARDER          reduce using rule 38 (paramsList -> paramsList COMA ID DOSPTS type .)
    COMA            reduce using rule 38 (paramsList -> paramsList COMA ID DOSPTS type .)


state 177

    (36) attributeList -> attributeList ID DOSPTS type PUNTOCOMA .

    LLAVEDER        reduce using rule 36 (attributeList -> attributeList ID DOSPTS type PUNTOCOMA .)
    ID              reduce using rule 36 (attributeList -> attributeList ID DOSPTS type PUNTOCOMA .)


state 178

    (18) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (21) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (22) declaration -> . VAR ID DOSPTS type IGUAL expression PUNTOCOMA
    (23) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA
    (27) assignment -> . ID IGUAL expression PUNTOCOMA
    (42) breakstmt -> . BREAK PUNTOCOMA
    (43) continuestmt -> . CONTINUE PUNTOCOMA
    (32) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (30) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (31) call -> . ID PARIZQ PARDER PUNTOCOMA
    (28) returnstmt -> . RETURN expression PUNTOCOMA
    (29) returnstmt -> . RETURN PUNTOCOMA
    (35) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA
    (24) interdeclaration -> . VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA

    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    block                          shift and go to state 184
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 179

    (19) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction .

    CONSOLE         reduce using rule 19 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction .)
    IF              reduce using rule 19 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction .)
    WHILE           reduce using rule 19 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction .)
    VAR             reduce using rule 19 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction .)
    ID              reduce using rule 19 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction .)
    BREAK           reduce using rule 19 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction .)
    CONTINUE        reduce using rule 19 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction .)
    FUNC            reduce using rule 19 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction .)
    RETURN          reduce using rule 19 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction .)
    INTERFACE       reduce using rule 19 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction .)
    $end            reduce using rule 19 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction .)
    LLAVEDER        reduce using rule 19 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction .)


state 180

    (26) interfaceContent -> ID DOSPTS expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    LLAVEDER        reduce using rule 26 (interfaceContent -> ID DOSPTS expression .)
    COMA            reduce using rule 26 (interfaceContent -> ID DOSPTS expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75


state 181

    (24) interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA .

    CONSOLE         reduce using rule 24 (interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA .)
    IF              reduce using rule 24 (interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA .)
    WHILE           reduce using rule 24 (interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA .)
    VAR             reduce using rule 24 (interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA .)
    ID              reduce using rule 24 (interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA .)
    BREAK           reduce using rule 24 (interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA .)
    CONTINUE        reduce using rule 24 (interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA .)
    FUNC            reduce using rule 24 (interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA .)
    RETURN          reduce using rule 24 (interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA .)
    INTERFACE       reduce using rule 24 (interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA .)
    $end            reduce using rule 24 (interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA .)
    LLAVEDER        reduce using rule 24 (interdeclaration -> VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA .)


state 182

    (25) interfaceContent -> interfaceContent COMA ID . DOSPTS expression

    DOSPTS          shift and go to state 185


state 183

    (23) arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA .

    CONSOLE         reduce using rule 23 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA .)
    IF              reduce using rule 23 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA .)
    WHILE           reduce using rule 23 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA .)
    VAR             reduce using rule 23 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA .)
    ID              reduce using rule 23 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA .)
    BREAK           reduce using rule 23 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA .)
    CONTINUE        reduce using rule 23 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA .)
    FUNC            reduce using rule 23 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA .)
    RETURN          reduce using rule 23 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA .)
    INTERFACE       reduce using rule 23 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA .)
    $end            reduce using rule 23 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA .)
    LLAVEDER        reduce using rule 23 (arraydeclaration -> VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA .)


state 184

    (18) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . whileinstruction
    (7) instruccion -> . declaration
    (8) instruccion -> . arraydeclaration
    (9) instruccion -> . assignment
    (10) instruccion -> . breakstmt
    (11) instruccion -> . continuestmt
    (12) instruccion -> . functionstmt
    (13) instruccion -> . call
    (14) instruccion -> . returnstmt
    (15) instruccion -> . interfacecreation
    (16) instruccion -> . interdeclaration
    (17) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PUNTOCOMA
    (18) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (19) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE ifinstruction
    (20) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (21) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (22) declaration -> . VAR ID DOSPTS type IGUAL expression PUNTOCOMA
    (23) arraydeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IGUAL expression PUNTOCOMA
    (27) assignment -> . ID IGUAL expression PUNTOCOMA
    (42) breakstmt -> . BREAK PUNTOCOMA
    (43) continuestmt -> . CONTINUE PUNTOCOMA
    (32) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (30) call -> . ID PARIZQ expressionList PARDER PUNTOCOMA
    (31) call -> . ID PARIZQ PARDER PUNTOCOMA
    (28) returnstmt -> . RETURN expression PUNTOCOMA
    (29) returnstmt -> . RETURN PUNTOCOMA
    (35) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER PUNTOCOMA
    (24) interdeclaration -> . VAR ID DOSPTS ID IGUAL LLAVEIZQ interfaceContent LLAVEDER PUNTOCOMA

    LLAVEDER        shift and go to state 186
    CONSOLE         shift and go to state 17
    IF              shift and go to state 18
    WHILE           shift and go to state 19
    VAR             shift and go to state 20
    ID              shift and go to state 21
    BREAK           shift and go to state 22
    CONTINUE        shift and go to state 23
    FUNC            shift and go to state 24
    RETURN          shift and go to state 25
    INTERFACE       shift and go to state 26

    instruccion                    shift and go to state 27
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    whileinstruction               shift and go to state 6
    declaration                    shift and go to state 7
    arraydeclaration               shift and go to state 8
    assignment                     shift and go to state 9
    breakstmt                      shift and go to state 10
    continuestmt                   shift and go to state 11
    functionstmt                   shift and go to state 12
    call                           shift and go to state 13
    returnstmt                     shift and go to state 14
    interfacecreation              shift and go to state 15
    interdeclaration               shift and go to state 16

state 185

    (25) interfaceContent -> interfaceContent COMA ID DOSPTS . expression
    (50) expression -> . expression MAS expression
    (51) expression -> . expression MENOS expression
    (52) expression -> . expression POR expression
    (53) expression -> . expression DIVIDIDO expression
    (54) expression -> . expression MOD expression
    (55) expression -> . MENOS expression
    (56) expression -> . expression MENOR expression
    (57) expression -> . expression MAYOR expression
    (58) expression -> . expression MENORIG expression
    (59) expression -> . expression MAYORIG expression
    (60) expression -> . expression IGUALDAD expression
    (61) expression -> . expression DIF expression
    (62) expression -> . expression AND expression
    (63) expression -> . expression OR expression
    (64) expression -> . NOT expression
    (65) expression -> . PARIZQ expression PARDER
    (66) expression -> . PARSEINT PARIZQ expression PARDER
    (67) expression -> . PARSEFLOAT PARIZQ expression PARDER
    (68) expression -> . expression TERN expression DOSPTS expression
    (69) expression -> . ENTERO
    (70) expression -> . CADENA
    (71) expression -> . DECIMAL
    (72) expression -> . listArray
    (73) expression -> . CORIZQ expressionList CORDER
    (74) expression -> . ID PARIZQ expressionList PARDER
    (75) expression -> . ID PARIZQ PARDER
    (76) listArray -> . ID CORIZQ expression CORDER
    (77) listArray -> . ID

    MENOS           shift and go to state 39
    NOT             shift and go to state 40
    PARIZQ          shift and go to state 41
    PARSEINT        shift and go to state 42
    PARSEFLOAT      shift and go to state 43
    ENTERO          shift and go to state 44
    CADENA          shift and go to state 45
    DECIMAL         shift and go to state 46
    CORIZQ          shift and go to state 48
    ID              shift and go to state 49

    expression                     shift and go to state 187
    listArray                      shift and go to state 47

state 186

    (18) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 18 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)


state 187

    (25) interfaceContent -> interfaceContent COMA ID DOSPTS expression .
    (50) expression -> expression . MAS expression
    (51) expression -> expression . MENOS expression
    (52) expression -> expression . POR expression
    (53) expression -> expression . DIVIDIDO expression
    (54) expression -> expression . MOD expression
    (56) expression -> expression . MENOR expression
    (57) expression -> expression . MAYOR expression
    (58) expression -> expression . MENORIG expression
    (59) expression -> expression . MAYORIG expression
    (60) expression -> expression . IGUALDAD expression
    (61) expression -> expression . DIF expression
    (62) expression -> expression . AND expression
    (63) expression -> expression . OR expression
    (68) expression -> expression . TERN expression DOSPTS expression

    LLAVEDER        reduce using rule 25 (interfaceContent -> interfaceContent COMA ID DOSPTS expression .)
    COMA            reduce using rule 25 (interfaceContent -> interfaceContent COMA ID DOSPTS expression .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    POR             shift and go to state 64
    DIVIDIDO        shift and go to state 65
    MOD             shift and go to state 66
    MENOR           shift and go to state 67
    MAYOR           shift and go to state 68
    MENORIG         shift and go to state 69
    MAYORIG         shift and go to state 70
    IGUALDAD        shift and go to state 71
    DIF             shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74
    TERN            shift and go to state 75

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 77 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 77 resolved as shift
WARNING: shift/reduce conflict for POR in state 77 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 77 resolved as shift
WARNING: shift/reduce conflict for MOD in state 77 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 77 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 77 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 77 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 77 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 77 resolved as shift
WARNING: shift/reduce conflict for DIF in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for OR in state 77 resolved as shift
WARNING: shift/reduce conflict for TERN in state 77 resolved as shift
WARNING: shift/reduce conflict for MAS in state 107 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 107 resolved as shift
WARNING: shift/reduce conflict for POR in state 107 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 107 resolved as shift
WARNING: shift/reduce conflict for MOD in state 107 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 107 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 107 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 107 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 107 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 107 resolved as shift
WARNING: shift/reduce conflict for DIF in state 107 resolved as shift
WARNING: shift/reduce conflict for AND in state 107 resolved as shift
WARNING: shift/reduce conflict for OR in state 107 resolved as shift
WARNING: shift/reduce conflict for TERN in state 107 resolved as shift
WARNING: shift/reduce conflict for MAS in state 112 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 112 resolved as shift
WARNING: shift/reduce conflict for POR in state 112 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 112 resolved as shift
WARNING: shift/reduce conflict for MOD in state 112 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 112 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 112 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 112 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 112 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 112 resolved as shift
WARNING: shift/reduce conflict for DIF in state 112 resolved as shift
WARNING: shift/reduce conflict for AND in state 112 resolved as shift
WARNING: shift/reduce conflict for OR in state 112 resolved as shift
WARNING: shift/reduce conflict for TERN in state 112 resolved as shift
WARNING: shift/reduce conflict for MAS in state 113 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 113 resolved as shift
WARNING: shift/reduce conflict for POR in state 113 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 113 resolved as shift
WARNING: shift/reduce conflict for MOD in state 113 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 113 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 113 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 113 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 113 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 113 resolved as shift
WARNING: shift/reduce conflict for DIF in state 113 resolved as shift
WARNING: shift/reduce conflict for AND in state 113 resolved as shift
WARNING: shift/reduce conflict for OR in state 113 resolved as shift
WARNING: shift/reduce conflict for TERN in state 113 resolved as shift
WARNING: shift/reduce conflict for MAS in state 115 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 115 resolved as shift
WARNING: shift/reduce conflict for POR in state 115 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 115 resolved as shift
WARNING: shift/reduce conflict for MOD in state 115 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 115 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 115 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 115 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 115 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 115 resolved as shift
WARNING: shift/reduce conflict for DIF in state 115 resolved as shift
WARNING: shift/reduce conflict for AND in state 115 resolved as shift
WARNING: shift/reduce conflict for OR in state 115 resolved as shift
WARNING: shift/reduce conflict for TERN in state 115 resolved as shift
WARNING: shift/reduce conflict for MAS in state 156 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 156 resolved as shift
WARNING: shift/reduce conflict for POR in state 156 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 156 resolved as shift
WARNING: shift/reduce conflict for MOD in state 156 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 156 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 156 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 156 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 156 resolved as shift
WARNING: shift/reduce conflict for IGUALDAD in state 156 resolved as shift
WARNING: shift/reduce conflict for DIF in state 156 resolved as shift
WARNING: shift/reduce conflict for AND in state 156 resolved as shift
WARNING: shift/reduce conflict for OR in state 156 resolved as shift
WARNING: shift/reduce conflict for TERN in state 156 resolved as shift
